[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "royal-equips-orchestrator"
version = "0.1.0"
description = "AI-powered e-commerce orchestration platform"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}

dependencies = [
    "fastapi>=0.110",
    "uvicorn>=0.27", 
    "gunicorn>=21.2",
    "pydantic>=1.10",
    "sqlalchemy>=2.0",
    "pandas>=2.0",
    "numpy>=1.25",
    "prophet>=1.1",
    "scikit-learn>=1.4",
    "requests>=2.31",
    "beautifulsoup4>=4.12",
    "plotly>=5.18",
    "streamlit>=1.32",
    "jinja2>=3.1",
    "tenacity>=8.2",
    "python-dotenv>=1.0",
    "aiohttp>=3.8",
    "async-timeout>=4.0",
    "shopifyapi>=12.3",
    "google-cloud-bigquery>=3.20",
    "pandas-gbq>=0.22",
    "bandit>=1.7",
    "pip-audit>=2.6",
    "openai>=1.0",
    "streamlit-webrtc>=0.47",
    "PyGithub>=1.59",
    "typing-extensions>=4.8",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.4.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["orchestrator"]
known_third_party = [
    "fastapi", "uvicorn", "pydantic", "sqlalchemy", "pandas", "numpy",
    "prophet", "sklearn", "requests", "bs4", "plotly", "streamlit",
    "jinja2", "tenacity", "dotenv", "aiohttp", "openai", "github",
    "google", "shopify"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start lenient for existing code
ignore_missing_imports = true  # Ignore missing stubs
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short"
asyncio_mode = "auto"