[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "royal-equips-orchestrator"
version = "0.1.0"
description = "AI-powered e-commerce orchestration platform"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}

[project.scripts]
royal-mcp = "royal_mcp:main"

dependencies = [
    "flask>=3.0",
    "flask-cors>=6.0",
    "flask-socketio>=5.4",
    "eventlet>=0.33",
    "flasgger>=0.9.7.1",
    "gunicorn>=21.2",
    "requests>=2.31",
    "tenacity>=8.2",
    "python-dotenv>=1.0",
    "openai>=1.0",
    "psutil>=5.9",
    "redis>=5.0",
    "prometheus-client>=0.20",
    "PyGithub>=1.59",
    "bandit>=1.7",
    "pip-audit>=2.6",
    "jinja2>=3.1",
    # Royal EQ MCP dependencies
    "modelcontextprotocol>=1.0.0",
    "httpx>=0.26.0",
    "pydantic>=2.5.0",
    "google-cloud-bigquery>=3.13.0",
    "supabase>=2.0.0",
    "gitpython>=3.1.40",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.4.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["orchestrator"]
known_third_party = [
    "flask", "gunicorn", "requests", "jinja2", "tenacity", "dotenv", 
    "openai", "github", "redis", "prometheus_client", "bandit", "pytest"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start lenient for existing code
ignore_missing_imports = true  # Ignore missing stubs
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short"
asyncio_mode = "auto"