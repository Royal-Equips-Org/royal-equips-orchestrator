name: Docker Build and Deploy

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871  # actions/checkout@v5

    - name: Log in to Container Registry
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567  # docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81  # docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75  # docker/build-push-action@v6
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Test Docker image
      if: success()
      run: |
        # Test that the image can start and serve requests
        docker run -d --name test-container -p 10000:10000 -e PORT=10000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        
        # Wait for container to be ready
        timeout 60 bash -c 'until curl -f http://localhost:10000/healthz; do sleep 2; done'
        
        # Run basic smoke test
        curl -f http://localhost:10000/healthz
        curl -f http://localhost:10000/readyz
        
        # Cleanup
        docker stop test-container
        docker rm test-container

  deploy-to-render:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to Render
      if: ${{ secrets.RENDER_API_KEY && secrets.RENDER_SERVICE_ID }}
      uses: johnbeynon/render-deploy-action@d3c84f4e4b4e5c0b0e90e0a2d5f9b3c8a6d7e8f9  # johnbeynon/render-deploy-action@v0.0.9
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}
    
    - name: Skip Render deployment
      if: ${{ !secrets.RENDER_API_KEY || !secrets.RENDER_SERVICE_ID }}
      run: |
        echo "Skipping Render deployment - missing RENDER_API_KEY or RENDER_SERVICE_ID secrets"