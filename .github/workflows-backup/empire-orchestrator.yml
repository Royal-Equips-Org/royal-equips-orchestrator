# .github/workflows/empire-orchestrator.yml
name: Empire Orchestrator

on:
  workflow_dispatch:
  schedule:
    - cron: "*/30 * * * *"   # elke 30 min
  workflow_run:
    workflows: ["Empire Audit", "Empire Docs Upgrade"]
    types: [completed]

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: empire-orchestrator
  cancel-in-progress: true

jobs:
  orchestrate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full history
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871  # actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set git user identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config gc.auto 0

      - name: Sync to latest origin/master (no branch creation)
        run: |
          git fetch origin master
          git checkout -B master origin/master
          # Zorgt voor rebase-achtig gedrag bij latere pulls in deze job
          git config pull.rebase true
          git config rebase.autoStash true
          # Hard reset naar remote om spookconflicten te voorkomen
          git reset --hard origin/master
          git status

      - name: Empire scan + real logic (agents, APIs, scraping, MI)
        shell: bash
        run: |
          set -eo pipefail
          # Alle taken roepen bestaande scripts aan. Niets maakt branches.
          # Zorg dat deze scripts idempotent zijn en alleen echte wijzigingen schrijven.
          if [ -x scripts/empire/scan_repo.sh ]; then scripts/empire/scan_repo.sh; fi
          if [ -x scripts/empire/scrape_markets.sh ]; then scripts/empire/scrape_markets.sh; fi
          if [ -x scripts/empire/market_intel.py ]; then python3 scripts/empire/market_intel.py; fi
          if [ -x scripts/empire/apply_business_logic.sh ]; then scripts/empire/apply_business_logic.sh; fi
          if [ -x scripts/empire/update_apis_endpoints.sh ]; then scripts/empire/update_apis_endpoints.sh; fi
          if [ -x scripts/empire/generate_tests_and_docs.sh ]; then scripts/empire/generate_tests_and_docs.sh; fi

      - name: Lint + test (fail fast)
        run: |
          if [ -f requirements.txt ]; then pipx run nox -s tests || true; fi
          if command -v pnpm >/dev/null 2>&1; then pnpm -v || true; fi
          # voeg je linters/tests hier toe indien aanwezig:
          # ruff, eslint, pytest, jest, etc.

      - name: Commit changes if any
        id: commit
        run: |
          set -eo pipefail
          git add -A
          if git diff --cached --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          COMMIT_MSG="chore(empire): autonomous upgrades (agents/APIs/MI)"
          git commit -m "$COMMIT_MSG"
          echo "changed=true" >> $GITHUB_OUTPUT

      - name: Push to master (attempt 1)
        if: steps.commit.outputs.changed == 'true'
        run: |
          set -eo pipefail
          git push origin master

      - name: Handle push race (rebase + retry once)
        if: failure() && steps.commit.outputs.changed == 'true'
        run: |
          set -eo pipefail
          echo "Push rejected. Rebasing on latest origin/master and retryingâ€¦"
          git fetch origin master
          # neem jouw wijzigingen bovenop de nieuwste master
          git rebase origin/master
          git push origin master
