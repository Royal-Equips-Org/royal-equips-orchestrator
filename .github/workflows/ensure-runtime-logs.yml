# Reusable workflow to ensure runtime logs exist before artifact upload
name: 🔧 Ensure Runtime Logs

on:
  workflow_call:
    inputs:
      runtime_logs_dir:
        description: 'Directory path for runtime logs'
        required: false
        type: string
        default: '/home/runner/work/_temp/runtime-logs'
      create_sample_events:
        description: 'Create sample blocked events for testing'
        required: false
        type: boolean
        default: false

permissions:
  contents: read

jobs:
  ensure-logs:
    name: 📝 Ensure Runtime Log Files
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: 🔧 Make Scripts Executable
        run: |
          chmod +x scripts/ensure-runtime-logs.sh
          chmod +x scripts/runtime_logger.py
          
      - name: 📁 Create Runtime Logs Directory
        run: |
          mkdir -p "${{ inputs.runtime_logs_dir }}"
          echo "✅ Created directory: ${{ inputs.runtime_logs_dir }}"
          
      - name: 📝 Generate Runtime Logs
        run: |
          echo "🔍 Generating runtime logs..."
          
          if [ "${{ inputs.create_sample_events }}" = "true" ]; then
            echo "📊 Creating logs with sample events for testing..."
            python scripts/runtime_logger.py \
              --dir "${{ inputs.runtime_logs_dir }}" \
              --add-event "workflow:Sample blocked event for testing" \
              --add-event "dependency:Sample dependency conflict resolved" \
              --verbose
          else
            echo "📝 Creating empty logs (no blocked events)..."
            python scripts/runtime_logger.py \
              --dir "${{ inputs.runtime_logs_dir }}" \
              --verbose
          fi
          
      - name: ✅ Verify Log Files Created
        run: |
          echo "🔍 Verifying runtime log files..."
          
          LOGS_DIR="${{ inputs.runtime_logs_dir }}"
          
          if [ -f "$LOGS_DIR/blocked.jsonl" ]; then
            echo "✅ blocked.jsonl exists"
            echo "📊 Size: $(stat -c%s "$LOGS_DIR/blocked.jsonl") bytes"
          else
            echo "❌ blocked.jsonl missing"
            exit 1
          fi
          
          if [ -f "$LOGS_DIR/blocked.md" ]; then
            echo "✅ blocked.md exists"
            echo "📊 Size: $(stat -c%s "$LOGS_DIR/blocked.md") bytes"
          else
            echo "❌ blocked.md missing"
            exit 1
          fi
          
          echo "🚀 All runtime log files are ready for artifact upload!"
          
      - name: 📤 Upload Runtime Logs as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: runtime-logs-${{ github.run_number }}
          path: ${{ inputs.runtime_logs_dir }}
          retention-days: 7
          if-no-files-found: error
          
      - name: 📊 Display Log Summary
        run: |
          echo "📊 Runtime Logs Summary"
          echo "======================"
          echo "Directory: ${{ inputs.runtime_logs_dir }}"
          echo "Files created:"
          ls -la "${{ inputs.runtime_logs_dir }}"
          echo ""
          echo "JSON Log Preview:"
          head -10 "${{ inputs.runtime_logs_dir }}/blocked.jsonl"
          echo ""
          echo "Markdown Report Preview:"
          head -20 "${{ inputs.runtime_logs_dir }}/blocked.md"