name: enforce-main-health
on:
  push:
    branches: [master]
permissions:
  contents: write
  pull-requests: write

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.outcome.outputs.status }}
    steps:
      - uses: actions/cache@v4

      # Install pnpm globally (production best practice)
      - name: Install pnpm
        run: npm install -g pnpm

      # Setup pnpm cache for faster installs (self-healing: cross-OS safe)
      - name: Setup pnpm cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a  # actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # Install all dependencies (incl. devDependencies) for lint/test
      # Self-healing: If strict fails, fallback to fix-lockfile and rerun
      - name: Install dependencies
        shell: bash
        run: |
          set -e
          pnpm install --frozen-lockfile --prod=false || (pnpm install --fix-lockfile --prod=false && pnpm install --frozen-lockfile --prod=false)
        env:
          NODE_ENV: development

      # Run lint step with pnpm (ESLint must be available)
      - id: lint
        name: Run Lint
        run: pnpm lint

      # Run tests step with pnpm
      - id: test
        name: Run Tests
        run: pnpm test -- --ci

      # Outcome detection for self-healing workflow
      - id: outcome
        shell: bash
        run: |
          set -e
          if [ "${{ steps.lint.outcome }}" = "success" ] && [ "${{ steps.test.outcome }}" = "success" ]; then
            echo "status=success" >> "$GITHUB_OUTPUT"
          else
            echo "status=failure" >> "$GITHUB_OUTPUT"
          fi

      # Optional: Security scan (enable if required; uncomment to use)
      # - name: pnpm audit
      #   run: pnpm audit

  revert_if_failed:
    needs: [ci]
    if: needs.ci.outputs.result == 'failure'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871  # actions/checkout@v4
        with:
          ref: "master"
          fetch-depth: 0
      - name: Revert last commit on master
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git revert --no-edit "${GITHUB_SHA}" || exit 1
          git push origin HEAD:master
