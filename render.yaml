# Render configuration for deploying Royal Equips Orchestrator Flask App
services:
  # Single web service that serves API + Control Center at /command-center
  - type: web
    name: orchestrator-api
    env: docker
    plan: free
    dockerfilePath: ./Dockerfile
    healthCheckPath: /healthz
    autoDeploy: true
    envVars:
      - key: APP_TYPE
        value: flask
      # APP_PATH is not needed in Docker mode; startup is controlled by Dockerfile/start.sh
      - key: FLASK_ENV
        value: production
      - key: PORT
        value: "10000"

      # Configuration for command center
      - key: COMMAND_CENTER_URL
        value: /command-center

      # Feature flags
      - key: ENABLE_METRICS
        value: "true"
      - key: ENABLE_STREAMING
        value: "true"

      # Secrets (managed in Render dashboard)
      - key: SHOPIFY_API_KEY
        sync: false
      - key: SHOPIFY_API_SECRET
        sync: false
      - key: SHOP_NAME
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: BIGQUERY_PROJECT_ID
        sync: false
      - key: BIGQUERY_DATASET
        sync: false
      - key: BIGQUERY_TABLE
        sync: false
      - key: GITHUB_TOKEN
        sync: false

  # Daily analytics export at 03:00 UTC
  - type: cron
    name: export-analytics
    env: docker
    dockerfilePath: ./Dockerfile
    schedule: "0 3 * * *"
    dockerCommand: >
      python scripts/run_analytics.py
    envVars:
      - key: SHOPIFY_API_KEY
        sync: false
      - key: SHOPIFY_API_SECRET
        sync: false
      - key: SHOP_NAME
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: BIGQUERY_PROJECT_ID
        sync: false
      - key: BIGQUERY_DATASET
        sync: false
      - key: BIGQUERY_TABLE
        sync: false

  # Daily security scan at 02:00 UTC
  - type: cron
    name: security-scan
    env: docker
    dockerfilePath: ./Dockerfile
    schedule: "0 2 * * *"
    dockerCommand: >
      python scripts/run_security_checks.py
    envVars:
      - key: SHOPIFY_API_KEY
        sync: false
      - key: SHOPIFY_API_SECRET
        sync: false
      - key: SHOP_NAME
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: BIGQUERY_PROJECT_ID
        sync: false
      - key: BIGQUERY_DATASET
        sync: false
      - key: BIGQUERY_TABLE
        sync: false
