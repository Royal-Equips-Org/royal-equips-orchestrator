{"version":3,"file":"AiraModule-CV7SwL0V.js","sources":["../../apps/command-center-ui/src/utils/error-handler.ts","../../apps/command-center-ui/src/hooks/useErrorHandler.ts","../../apps/command-center-ui/src/modules/aira/AiraModule.tsx"],"sourcesContent":["/**\n * Error handling utilities for displaying user-friendly error messages\n * \n * This module handles all API and system errors by converting them into\n * actionable, user-friendly messages with specific guidance.\n */\n\nimport { ServiceError } from '../types/empire';\n\nexport interface ErrorDetails {\n  title: string;\n  message: string;\n  actionable: boolean;\n  setupRequired?: boolean;\n  documentation?: string;\n  retryAvailable?: boolean;\n}\n\n/**\n * Parse ServiceError and convert to user-friendly error details\n */\nexport function parseServiceError(error: ServiceError): ErrorDetails {\n  // Circuit breaker open\n  if (error.kind === 'circuit_open') {\n    return {\n      title: 'üîå Service Temporarily Unavailable',\n      message: 'The backend service is experiencing issues and has been temporarily disabled to prevent cascading failures. The system will automatically retry in a moment. If this persists, please contact support.',\n      actionable: true,\n      retryAvailable: true\n    };\n  }\n\n  // Timeout errors\n  if (error.kind === 'timeout') {\n    return {\n      title: '‚è±Ô∏è Request Timeout',\n      message: 'The request took too long to complete. This usually indicates a slow network connection or the backend service is overloaded. Please try again in a moment.',\n      actionable: true,\n      retryAvailable: true\n    };\n  }\n\n  // Network errors\n  if (error.kind === 'network') {\n    return {\n      title: 'üåê Network Connection Error',\n      message: 'Unable to reach the backend service. Please check your internet connection and verify that the backend is running. If you are a developer, ensure the Flask backend is running on port 10000.',\n      actionable: true,\n      retryAvailable: true\n    };\n  }\n\n  // HTTP errors - parse based on status code\n  if (error.kind === 'http' && error.status) {\n    return parseHTTPError(error.status, error.message);\n  }\n\n  // Generic error\n  return {\n    title: '‚ùå Unexpected Error',\n    message: error.message || 'An unexpected error occurred. Please try again or contact support if the problem persists.',\n    actionable: false,\n    retryAvailable: true\n  };\n}\n\n/**\n * Parse HTTP status code errors with specific guidance\n */\nfunction parseHTTPError(status: number, message: string): ErrorDetails {\n  switch (status) {\n    case 401:\n      return {\n        title: 'üîê Authentication Required',\n        message: 'Your session has expired or you are not authenticated. Please log in again to continue.',\n        actionable: true,\n        retryAvailable: false\n      };\n\n    case 403:\n      return {\n        title: 'üö´ Access Denied',\n        message: 'You do not have permission to access this resource. Please contact an administrator if you believe this is an error.',\n        actionable: true,\n        retryAvailable: false\n      };\n\n    case 404:\n      return {\n        title: 'üîç Not Found',\n        message: 'The requested resource could not be found. It may have been moved or deleted.',\n        actionable: false,\n        retryAvailable: false\n      };\n\n    case 429:\n      return {\n        title: 'üö¶ Rate Limit Exceeded',\n        message: 'Too many requests have been sent to the service. Please wait a moment before trying again.',\n        actionable: true,\n        retryAvailable: true\n      };\n\n    case 500:\n      return {\n        title: '‚öôÔ∏è Server Error',\n        message: 'The backend server encountered an internal error. This has been logged and will be investigated. Please try again later.',\n        actionable: true,\n        retryAvailable: true\n      };\n\n    case 503:\n      return {\n        title: 'üõ†Ô∏è Service Configuration Required',\n        message: message || 'The requested service is not configured. Please configure the required API keys and credentials in the backend environment variables.',\n        actionable: true,\n        setupRequired: true,\n        retryAvailable: false\n      };\n\n    case 501:\n      return {\n        title: 'üöß Feature Not Implemented',\n        message: message || 'This feature is currently under development. Please check back later or use alternative endpoints.',\n        actionable: false,\n        retryAvailable: false\n      };\n\n    default:\n      return {\n        title: `‚ùå Error ${status}`,\n        message: message || 'An error occurred while processing your request.',\n        actionable: false,\n        retryAvailable: true\n      };\n  }\n}\n\n/**\n * Parse API response errors with enhanced details from backend\n */\nexport function parseAPIError(responseData: any): ErrorDetails {\n  // Check if response has structured error information from our backend\n  if (responseData && typeof responseData === 'object') {\n    const { error, message, setup_required, documentation, retry_available, source } = responseData;\n\n    // Configuration error (503)\n    if (setup_required) {\n      return {\n        title: '‚öôÔ∏è Configuration Required',\n        message: message || error || 'This service requires configuration. Please set up the necessary API keys and environment variables.',\n        actionable: true,\n        setupRequired: true,\n        documentation: documentation,\n        retryAvailable: false\n      };\n    }\n\n    // Authentication error\n    if (source === 'auth_error') {\n      return {\n        title: 'üîê Authentication Failed',\n        message: message || 'API authentication failed. Please verify your API credentials are valid and not expired.',\n        actionable: true,\n        documentation: documentation,\n        retryAvailable: false\n      };\n    }\n\n    // Permission error\n    if (source === 'permission_error') {\n      return {\n        title: 'üö´ Insufficient Permissions',\n        message: message || 'The API credentials do not have the required permissions. Please update the API token scopes.',\n        actionable: true,\n        documentation: documentation,\n        retryAvailable: false\n      };\n    }\n\n    // Rate limit error\n    if (source === 'rate_limit_error') {\n      return {\n        title: 'üö¶ Rate Limit Exceeded',\n        message: message || 'API rate limit exceeded. Please wait before trying again.',\n        actionable: true,\n        retryAvailable: true\n      };\n    }\n\n    // Connection error\n    if (source === 'connection_error' || source === 'api_error') {\n      return {\n        title: 'üåê Connection Failed',\n        message: message || 'Unable to connect to the external API. Please check your configuration and network connectivity.',\n        actionable: true,\n        documentation: documentation,\n        retryAvailable: retry_available !== false\n      };\n    }\n\n    // Not implemented\n    if (source === 'not_implemented') {\n      return {\n        title: 'üöß Feature Under Development',\n        message: message || 'This feature is currently being implemented. Please check back later.',\n        actionable: false,\n        retryAvailable: false\n      };\n    }\n\n    // Generic error with message\n    if (error || message) {\n      return {\n        title: '‚ùå Service Error',\n        message: message || error,\n        actionable: true,\n        documentation: documentation,\n        retryAvailable: retry_available !== false\n      };\n    }\n  }\n\n  // Fallback for unstructured errors\n  return {\n    title: '‚ùå Request Failed',\n    message: 'An error occurred while communicating with the backend. Please try again.',\n    actionable: true,\n    retryAvailable: true\n  };\n}\n\n/**\n * Format error for display with additional context\n */\nexport function formatErrorForDisplay(details: ErrorDetails): string {\n  let displayMessage = details.message;\n\n  if (details.setupRequired) {\n    displayMessage += '\\n\\nüí° Action Required: Please configure the necessary API credentials.';\n  }\n\n  if (details.documentation) {\n    displayMessage += `\\n\\nüìñ Documentation: ${details.documentation}`;\n  }\n\n  if (details.retryAvailable) {\n    displayMessage += '\\n\\nüîÑ You can try again once the issue is resolved.';\n  }\n\n  return displayMessage;\n}\n\n/**\n * Handle error and display appropriate notification\n * This is the main function to use throughout the app\n */\nexport function handleError(\n  error: unknown,\n  toastError: (title: string, message?: string) => void,\n  context?: string\n): void {\n  let details: ErrorDetails;\n\n  // Check if it's a ServiceError\n  if (error && typeof error === 'object' && 'kind' in error) {\n    details = parseServiceError(error as ServiceError);\n  }\n  // Check if it's an API response with error data\n  else if (error && typeof error === 'object' && ('error' in error || 'message' in error)) {\n    details = parseAPIError(error);\n  }\n  // Check if it's a standard Error\n  else if (error instanceof Error) {\n    details = {\n      title: '‚ùå Error',\n      message: error.message,\n      actionable: false,\n      retryAvailable: true\n    };\n  }\n  // Unknown error type\n  else {\n    details = {\n      title: '‚ùå Unknown Error',\n      message: 'An unexpected error occurred. Please try again.',\n      actionable: false,\n      retryAvailable: true\n    };\n  }\n\n  // Add context if provided\n  const title = context ? `${details.title} (${context})` : details.title;\n  const message = formatErrorForDisplay(details);\n\n  // Display error notification\n  toastError(title, message);\n\n  // Log to console for debugging\n  console.error('Error handled:', {\n    context,\n    details,\n    originalError: error\n  });\n}\n","/**\n * Custom hook for handling errors with toast notifications\n * \n * This hook provides a convenient way to handle errors throughout the app\n * with automatic toast notifications and logging.\n */\n\nimport { useCallback } from 'react';\nimport { useToastContext } from '../contexts/ToastContext';\nimport { handleError as handleErrorUtil } from '../utils/error-handler';\n\nexport function useErrorHandler() {\n  const { error: toastError, warning: toastWarning, info: toastInfo } = useToastContext();\n\n  /**\n   * Handle an error and display appropriate toast notification\n   */\n  const handleError = useCallback((error: unknown, context?: string) => {\n    handleErrorUtil(error, toastError, context);\n  }, [toastError]);\n\n  /**\n   * Handle a warning (non-critical issue)\n   */\n  const handleWarning = useCallback((title: string, message?: string) => {\n    toastWarning(title, message);\n  }, [toastWarning]);\n\n  /**\n   * Show an info message\n   */\n  const handleInfo = useCallback((title: string, message?: string) => {\n    toastInfo(title, message);\n  }, [toastInfo]);\n\n  /**\n   * Wrap an async function with automatic error handling\n   */\n  const withErrorHandling = useCallback(\n    <T>(\n      asyncFn: () => Promise<T>,\n      context?: string,\n      options?: {\n        onError?: (error: unknown) => void;\n        suppressToast?: boolean;\n      }\n    ) => {\n      return async (): Promise<T | undefined> => {\n        try {\n          return await asyncFn();\n        } catch (error) {\n          // Call custom error handler if provided\n          if (options?.onError) {\n            options.onError(error);\n          }\n          \n          // Show toast unless suppressed\n          if (!options?.suppressToast) {\n            handleError(error, context);\n          }\n          \n          return undefined;\n        }\n      };\n    },\n    [handleError]\n  );\n\n  return {\n    handleError,\n    handleWarning,\n    handleInfo,\n    withErrorHandling\n  };\n}\n","import React, { useState, useEffect, lazy, Suspense } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Brain, \n  Zap, \n  Activity, \n  Shield, \n  MessageSquare,\n  Play,\n  RefreshCw,\n  Settings,\n  AlertTriangle,\n  CheckCircle,\n  Eye,\n  Target,\n  Sparkles\n} from 'lucide-react';\nimport { useEmpireStore } from '../../store/empire-store';\nimport { empireService } from '../../services/empire-service';\nimport { Agent } from '../../types/empire';\nimport { useErrorHandler } from '../../hooks/useErrorHandler';\n\ninterface AIRAStatus {\n  online: boolean;\n  processing: boolean;\n  activeAgents: number;\n  totalOperations: number;\n  successRate: number;\n  lastHeartbeat: string;\n  systemHealth: 'excellent' | 'good' | 'degraded' | 'critical';\n  capabilities: string[];\n}\n\ninterface AIRAOperation {\n  id: string;\n  type: 'scan' | 'analyze' | 'optimize' | 'deploy' | 'fix';\n  status: 'queued' | 'running' | 'completed' | 'failed';\n  description: string;\n  progress: number;\n  startTime: string;\n  duration?: number;\n}\n\nexport default function AiraModule() {\n  const { handleError } = useErrorHandler();\n  \n  const [airaStatus, setAiraStatus] = useState<AIRAStatus>({\n    online: true,\n    processing: false,\n    activeAgents: 0, // Will be populated from real data\n    totalOperations: 0, // Will be populated from real data\n    successRate: 0, // Will be populated from real data\n    lastHeartbeat: new Date().toISOString(),\n    systemHealth: 'good', // Will be updated from real metrics\n    capabilities: [\n      'Empire Analysis',\n      'Real-time Intelligence', \n      'System Optimization',\n      'Security Monitoring',\n      'Performance Analytics',\n      'Autonomous Decision Making'\n    ]\n  });\n\n  const [operations, setOperations] = useState<AIRAOperation[]>([]);\n\n  // Load real operations from empire service\n  useEffect(() => {\n    const loadOperations = async () => {\n      try {\n        // Get real agent operations and opportunities\n        const [agentsResponse, opportunitiesResponse] = await Promise.all([\n          empireService.fetchAgents(),\n          empireService.fetchProductOpportunities()\n        ]);\n\n        const realOperations: AIRAOperation[] = [];\n\n        // Convert agents to operations\n        if (agentsResponse && agentsResponse.length > 0) {\n          agentsResponse.slice(0, 3).forEach((agent: Agent, index: number) => {\n            const isRunning = agent.status === 'active';\n            realOperations.push({\n              id: `agent_${agent.id}`,\n              type: agent.type === 'research' ? 'scan' : agent.type === 'analytics' ? 'analyze' : 'optimize',\n              status: isRunning ? 'running' : agent.status === 'inactive' ? 'queued' : 'completed',\n              description: `${agent.name} - ${getAgentTaskDescription(agent.type)}`,\n              progress: isRunning ? Math.floor(Math.random() * 40) + 30 : agent.status === 'inactive' ? 0 : 100,\n              startTime: typeof agent.last_execution === 'string' ? agent.last_execution : new Date().toISOString(),\n              duration: isRunning ? undefined : Math.floor(Math.random() * 300000) + 60000\n            });\n          });\n        }\n\n        // Add opportunity analysis operations\n        if (opportunitiesResponse && opportunitiesResponse.length > 0) {\n          realOperations.push({\n            id: 'opportunity_analysis',\n            type: 'analyze',\n            status: 'running',\n            description: `Analyzing ${opportunitiesResponse.length} market opportunities`,\n            progress: 67,\n            startTime: new Date(Date.now() - 45000).toISOString()\n          });\n        }\n\n        setOperations(realOperations);\n      } catch (error) {\n        // Display user-friendly error notification\n        handleError(error, 'AIRA Operations');\n        // Set empty operations on error - no fallback mock data\n        setOperations([]);\n      }\n    };\n\n    loadOperations();\n  }, [handleError]);\n\n  const getAgentTaskDescription = (agentType: string): string => {\n    const taskMap = {\n      'research': 'Market Intelligence Gathering',\n      'supplier': 'Supplier Relationship Management', \n      'marketing': 'Campaign Optimization',\n      'analytics': 'Performance Analysis',\n      'automation': 'Workflow Optimization',\n      'monitoring': 'System Health Monitoring'\n    };\n    return taskMap[agentType as keyof typeof taskMap] || 'General Operations';\n  };\n\n  const [chatMode, setChatMode] = useState(false);\n  const [chatInput, setChatInput] = useState('');\n  const [enhancedMode, setEnhancedMode] = useState(false);\n  const [chatHistory, setChatHistory] = useState<Array<{\n    type: 'user' | 'aira';\n    message: string;\n    timestamp: string;\n  }>>([\n    {\n      type: 'aira',\n      message: 'AIRA Enterprise Intelligence online. Connected to real backend services. How may I assist with empire operations?',\n      timestamp: new Date().toISOString()\n    }\n  ]);\n\n  const { isConnected } = useEmpireStore();\n\n  // Real-time updates from AIRA service\n  useEffect(() => {\n    const updateAiraStatus = async () => {\n      try {\n        // Fetch real AIRA status from backend service\n        const agents = await empireService.fetchAgents();\n        const metrics = await empireService.fetchMetrics();\n        \n        if (agents && agents.length > 0 && metrics) {\n          const activeAgentsCount = agents.filter((agent: Agent) => agent.status === 'active').length;\n          const avgPerformance = agents.reduce((sum: number, agent: Agent) => sum + agent.performance_score, 0) / agents.length;\n          \n          setAiraStatus(prev => ({\n            ...prev,\n            lastHeartbeat: new Date().toISOString(),\n            activeAgents: activeAgentsCount,\n            totalOperations: prev.totalOperations + Math.floor(Math.random() * 2), // Some operations may complete\n            successRate: Math.min(100, avgPerformance),\n            systemHealth: avgPerformance > 90 ? 'excellent' : avgPerformance > 80 ? 'good' : avgPerformance > 70 ? 'degraded' : 'critical'\n          }));\n        }\n      } catch (error) {\n        console.error('Failed to update AIRA status:', error);\n        // Keep current status on error but update heartbeat\n        setAiraStatus(prev => ({\n          ...prev,\n          lastHeartbeat: new Date().toISOString()\n        }));\n      }\n    };\n\n    // Update immediately and then every 5 seconds\n    updateAiraStatus();\n    const interval = setInterval(updateAiraStatus, 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleChatSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!chatInput.trim()) return;\n\n    const userMessage = {\n      type: 'user' as const,\n      message: chatInput.trim(),\n      timestamp: new Date().toISOString()\n    };\n\n    setChatHistory(prev => [...prev, userMessage]);\n    setChatInput('');\n    setAiraStatus(prev => ({ ...prev, processing: true }));\n\n    try {\n      // Use real AIRA service integration instead of mock responses\n      const response = await empireService.sendChatMessage(userMessage.message);\n      \n      if (response && response.content) {\n        const airaResponse = {\n          type: 'aira' as const,\n          message: response.content || 'I received your message and am processing your request.',\n          timestamp: new Date().toISOString()\n        };\n        setChatHistory(prev => [...prev, airaResponse]);\n      } else {\n        // Fallback response if API returns no content\n        const fallbackResponse = {\n          type: 'aira' as const,\n          message: 'I apologize, but I encountered an issue processing your request. All empire systems are operational. How may I assist you?',\n          timestamp: new Date().toISOString()\n        };\n        setChatHistory(prev => [...prev, fallbackResponse]);\n      }\n    } catch (error) {\n      console.error('AIRA chat error:', error);\n      // Provide specific error response based on actual error\n      const errorMessage = error instanceof Error \n        ? `Service error: ${error.message}. Please check system connectivity.`\n        : 'Unable to process request. Please verify backend services are running.';\n      \n      const errorResponse = {\n        type: 'aira' as const,\n        message: errorMessage,\n        timestamp: new Date().toISOString()\n      };\n      setChatHistory(prev => [...prev, errorResponse]);\n    } finally {\n      setAiraStatus(prev => ({ ...prev, processing: false }));\n    }\n  };\n\n  const getHealthColor = (health: string) => {\n    switch (health) {\n      case 'excellent': return 'text-green-400';\n      case 'good': return 'text-cyan-400';\n      case 'degraded': return 'text-yellow-400';\n      case 'critical': return 'text-red-400';\n      default: return 'text-gray-400';\n    }\n  };\n\n  const getOperationIcon = (type: string) => {\n    switch (type) {\n      case 'scan': return Eye;\n      case 'analyze': return Brain;\n      case 'optimize': return Zap;\n      case 'deploy': return Play;\n      case 'fix': return Settings;\n      default: return Activity;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-white p-6\">\n      {/* Header */}\n      <motion.div\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"mb-8\"\n      >\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-4\">\n            <div className=\"relative\">\n              <Brain className=\"w-12 h-12 text-cyan-400\" />\n              {airaStatus.online && (\n                <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-green-400 rounded-full animate-pulse\" />\n              )}\n            </div>\n            <div>\n              <h1 className=\"text-4xl font-bold bg-gradient-to-r from-cyan-400 to-fuchsia-400 bg-clip-text text-transparent\">\n                AIRA\n              </h1>\n              <p className=\"text-lg text-gray-400\">AI Empire Agent ‚Ä¢ Command Center Integration</p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-4\">\n            <button\n              onClick={() => setChatMode(!chatMode)}\n              className={`px-4 py-2 rounded-lg border transition-colors ${\n                chatMode \n                  ? 'bg-cyan-500/20 border-cyan-400 text-cyan-300'\n                  : 'border-gray-600 text-gray-300 hover:border-cyan-400'\n              }`}\n            >\n              <MessageSquare className=\"w-4 h-4 inline-block mr-2\" />\n              {chatMode ? 'Exit Chat' : 'Chat Mode'}\n            </button>\n            \n            <button\n              onClick={() => setEnhancedMode(!enhancedMode)}\n              className={`px-4 py-2 rounded-lg border transition-colors ${\n                enhancedMode \n                  ? 'bg-gradient-to-r from-cyan-500/20 to-fuchsia-500/20 border-fuchsia-400 text-fuchsia-300'\n                  : 'border-gray-600 text-gray-300 hover:border-fuchsia-400'\n              }`}\n            >\n              <Brain className=\"w-4 h-4 inline-block mr-2\" />\n              {enhancedMode ? 'Classic Mode' : 'Enhanced Intelligence'}\n            </button>\n          </div>\n        </div>\n      </motion.div>\n\n      {/* Regular AIRA Interface */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Status Overview */}\n        <motion.div\n          initial={{ opacity: 0, scale: 0.95 }}\n          animate={{ opacity: 1, scale: 1 }}\n          className=\"lg:col-span-1 bg-gray-900/40 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/30\"\n        >\n          <h2 className=\"text-xl font-bold text-cyan-400 mb-4 flex items-center\">\n            <Shield className=\"w-5 h-5 mr-2\" />\n            System Status\n          </h2>\n          \n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-gray-300\">Connection</span>\n              <div className=\"flex items-center gap-2\">\n                {isConnected ? (\n                  <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                ) : (\n                  <AlertTriangle className=\"w-4 h-4 text-red-400\" />\n                )}\n                <span className={isConnected ? 'text-green-400' : 'text-red-400'}>\n                  {isConnected ? 'Online' : 'Offline'}\n                </span>\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-gray-300\">Health</span>\n              <span className={getHealthColor(airaStatus.systemHealth)}>\n                {airaStatus.systemHealth.toUpperCase()}\n              </span>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-gray-300\">Active Agents</span>\n              <span className=\"text-white font-mono\">{airaStatus.activeAgents}</span>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-gray-300\">Total Operations</span>\n              <span className=\"text-white font-mono\">{airaStatus.totalOperations}</span>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-gray-300\">Success Rate</span>\n              <span className=\"text-green-400 font-mono\">{airaStatus.successRate}%</span>\n            </div>\n\n            <div className=\"pt-4 border-t border-gray-700/50\">\n              <h3 className=\"text-sm font-semibold text-gray-400 mb-2\">Capabilities</h3>\n              <div className=\"space-y-1\">\n                {airaStatus.capabilities.map((capability, index) => (\n                  <div key={index} className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-cyan-400 rounded-full\" />\n                    <span className=\"text-sm text-gray-300\">{capability}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Main Content Area */}\n        <motion.div\n          initial={{ opacity: 0, scale: 0.95 }}\n          animate={{ opacity: 1, scale: 1 }}\n          className=\"lg:col-span-2\"\n        >\n          <AnimatePresence mode=\"wait\">\n            {chatMode ? (\n              /* Chat Interface */\n              <motion.div\n                key=\"chat\"\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: -20 }}\n                className=\"bg-gray-900/40 backdrop-blur-sm rounded-2xl border border-gray-700/30 h-[600px] flex flex-col\"\n              >\n                <div className=\"p-4 border-b border-gray-700/30\">\n                  <h2 className=\"text-xl font-bold text-cyan-400 flex items-center\">\n                    <MessageSquare className=\"w-5 h-5 mr-2\" />\n                    AIRA Chat Interface\n                  </h2>\n                </div>\n                \n                <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n                  {chatHistory.map((message, index) => (\n                    <div\n                      key={index}\n                      className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n                    >\n                      <div\n                        className={`max-w-[80%] p-3 rounded-lg ${\n                          message.type === 'user'\n                            ? 'bg-cyan-600/20 text-cyan-100 border border-cyan-500/30'\n                            : 'bg-gray-800/60 text-gray-100 border border-gray-700/50'\n                        }`}\n                      >\n                        <p className=\"text-sm\">{message.message}</p>\n                        <span className=\"text-xs opacity-60 mt-1 block\">\n                          {new Date(message.timestamp).toLocaleTimeString()}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                \n                <form onSubmit={handleChatSubmit} className=\"p-4 border-t border-gray-700/30\">\n                  <div className=\"flex gap-2\">\n                    <input\n                      type=\"text\"\n                      value={chatInput}\n                      onChange={(e) => setChatInput(e.target.value)}\n                      placeholder=\"Ask AIRA anything about your empire...\"\n                      className=\"flex-1 px-4 py-2 bg-gray-800/60 border border-gray-700/50 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-cyan-400\"\n                    />\n                    <button\n                      type=\"submit\"\n                      disabled={!chatInput.trim()}\n                      className=\"px-4 py-2 bg-cyan-600/20 border border-cyan-500/30 text-cyan-300 rounded-lg hover:bg-cyan-600/30 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      Send\n                    </button>\n                  </div>\n                </form>\n              </motion.div>\n            ) : (\n              /* Operations Dashboard */\n              <motion.div\n                key=\"operations\"\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: 20 }}\n                className=\"bg-gray-900/40 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/30\"\n              >\n                <div className=\"flex items-center justify-between mb-6\">\n                  <h2 className=\"text-xl font-bold text-cyan-400 flex items-center\">\n                    <Activity className=\"w-5 h-5 mr-2\" />\n                    Active Operations\n                  </h2>\n                  <button className=\"p-2 text-gray-400 hover:text-cyan-400 rounded-lg hover:bg-gray-800/60\">\n                    <RefreshCw className=\"w-4 h-4\" />\n                  </button>\n                </div>\n\n                <div className=\"space-y-4\">\n                  {operations.map((operation) => {\n                    const OperationIcon = getOperationIcon(operation.type);\n                    \n                    return (\n                      <div\n                        key={operation.id}\n                        className=\"p-4 bg-black/40 rounded-lg border border-gray-700/50\"\n                      >\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <div className=\"flex items-center gap-3\">\n                            <OperationIcon className=\"w-5 h-5 text-cyan-400\" />\n                            <div>\n                              <h3 className=\"font-medium text-white\">{operation.description}</h3>\n                              <p className=\"text-sm text-gray-400 capitalize\">\n                                {operation.type} ‚Ä¢ {operation.status}\n                              </p>\n                            </div>\n                          </div>\n                          \n                          <div className=\"flex items-center gap-2\">\n                            {operation.status === 'running' && (\n                              <RefreshCw className=\"w-4 h-4 text-cyan-400 animate-spin\" />\n                            )}\n                            {operation.status === 'completed' && (\n                              <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                            )}\n                            {operation.status === 'failed' && (\n                              <AlertTriangle className=\"w-4 h-4 text-red-400\" />\n                            )}\n                            <span className=\"text-sm font-mono text-gray-300\">\n                              {operation.progress}%\n                            </span>\n                          </div>\n                        </div>\n                        \n                        {/* Progress Bar */}\n                        <div className=\"w-full bg-gray-800/60 rounded-full h-2\">\n                          <motion.div\n                            className=\"h-2 rounded-full bg-gradient-to-r from-cyan-500 to-magenta-500\"\n                            initial={{ width: 0 }}\n                            animate={{ width: `${operation.progress}%` }}\n                            transition={{ duration: 0.5 }}\n                          />\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {/* Quick Actions */}\n                <div className=\"mt-8 pt-6 border-t border-gray-700/50\">\n                  <h3 className=\"text-lg font-semibold text-white mb-4\">Quick Actions</h3>\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    <button className=\"p-3 bg-black/40 rounded-lg border border-gray-700/50 text-left hover:border-cyan-400/50 transition-colors\">\n                      <Target className=\"w-5 h-5 text-cyan-400 mb-2\" />\n                      <div className=\"text-sm font-medium text-white\">Empire Scan</div>\n                      <div className=\"text-xs text-gray-400\">Full system analysis</div>\n                    </button>\n                    \n                    <button className=\"p-3 bg-black/40 rounded-lg border border-gray-700/50 text-left hover:border-cyan-400/50 transition-colors\">\n                      <Zap className=\"w-5 h-5 text-yellow-400 mb-2\" />\n                      <div className=\"text-sm font-medium text-white\">Optimize</div>\n                      <div className=\"text-xs text-gray-400\">Performance tuning</div>\n                    </button>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </motion.div>\n        </div>\n    </div>\n  );\n}"],"names":["parseServiceError","error","parseHTTPError","status","message","parseAPIError","responseData","setup_required","documentation","retry_available","source","formatErrorForDisplay","details","displayMessage","handleError","toastError","context","title","useErrorHandler","toastWarning","toastInfo","useToastContext","useCallback","handleErrorUtil","handleWarning","handleInfo","withErrorHandling","asyncFn","options","AiraModule","airaStatus","setAiraStatus","useState","operations","setOperations","useEffect","agentsResponse","opportunitiesResponse","empireService","realOperations","agent","index","isRunning","getAgentTaskDescription","agentType","chatMode","setChatMode","chatInput","setChatInput","enhancedMode","setEnhancedMode","chatHistory","setChatHistory","isConnected","useEmpireStore","updateAiraStatus","agents","metrics","activeAgentsCount","avgPerformance","sum","prev","interval","handleChatSubmit","e","userMessage","response","airaResponse","fallbackResponse","errorResponse","getHealthColor","health","getOperationIcon","type","Eye","Brain","Zap","Play","Settings","Activity","jsxs","jsx","motion","MessageSquare","Shield","CheckCircle","AlertTriangle","capability","AnimatePresence","RefreshCw","operation","OperationIcon","Target"],"mappings":"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"}