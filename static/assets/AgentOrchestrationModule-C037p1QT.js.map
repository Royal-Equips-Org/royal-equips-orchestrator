{"version":3,"file":"AgentOrchestrationModule-C037p1QT.js","sources":["../../apps/command-center-ui/src/modules/agent-orchestration/AgentOrchestrationModule.tsx"],"sourcesContent":["/**\n * Agent Orchestration Module - Command Center for 100+ Agents\n * \n * Provides unified control interface for managing all agents in the Royal Equips Empire.\n * Integrated with AIRA for intelligent orchestration and automated coordination.\n */\n\nimport { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\n\ninterface Agent {\n  agent_id: string;\n  name: string;\n  type: string;\n  capabilities: string[];\n  status: string;\n  version: string;\n  last_heartbeat: string;\n  execution_count: number;\n  error_count: number;\n  current_load: number;\n  max_concurrent_tasks: number;\n}\n\ninterface Task {\n  task_id: string;\n  capability: string;\n  priority: string;\n  status: string;\n  assigned_agent?: string;\n  created_at: string;\n}\n\ninterface OrchestrationStats {\n  registry_stats: {\n    total_agents: number;\n    healthy_agents: number;\n    status_breakdown: Record<string, number>;\n  };\n  task_stats: {\n    pending_tasks: number;\n    active_tasks: number;\n    completed_tasks: number;\n  };\n}\n\nexport default function AgentOrchestrationModule() {\n  const [agents, setAgents] = useState<Agent[]>([]);\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [stats, setStats] = useState<OrchestrationStats | null>(null);\n  const [selectedAgent, setSelectedAgent] = useState<Agent | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetchOrchestrationData();\n    const interval = setInterval(fetchOrchestrationData, 5000); // Refresh every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  const fetchOrchestrationData = async () => {\n    try {\n      const [agentsRes, tasksRes, statsRes] = await Promise.all([\n        fetch('/api/orchestration/agents'),\n        fetch('/api/orchestration/tasks'),\n        fetch('/api/orchestration/stats')\n      ]);\n\n      if (agentsRes.ok && tasksRes.ok && statsRes.ok) {\n        const agentsData = await agentsRes.json();\n        const tasksData = await tasksRes.json();\n        const statsData = await statsRes.json();\n\n        setAgents(agentsData.agents || []);\n        setTasks([\n          ...(tasksData.pending_tasks || []),\n          ...(tasksData.active_tasks || [])\n        ]);\n        setStats(statsData);\n        setError(null);\n      } else {\n        setError('Failed to fetch orchestration data');\n      }\n    } catch (err) {\n      console.error('Error fetching orchestration data:', err);\n      setError('Error connecting to orchestration system');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case 'ready':\n      case 'idle':\n        return 'text-green-400';\n      case 'running':\n        return 'text-cyan-400';\n      case 'error':\n        return 'text-red-400';\n      case 'maintenance':\n        return 'text-yellow-400';\n      default:\n        return 'text-gray-400';\n    }\n  };\n\n  const getLoadColor = (load: number) => {\n    if (load < 0.5) return 'bg-green-500';\n    if (load < 0.8) return 'bg-yellow-500';\n    return 'bg-red-500';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-gray-900 flex items-center justify-center\">\n        <div className=\"text-cyan-400 text-xl\">Loading Agent Orchestration...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-gray-900 p-6\">\n      {/* Header */}\n      <motion.div\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"mb-8\"\n      >\n        <h1 className=\"text-4xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-blue-500 mb-2\">\n          üè∞ Agent Orchestration Command Center\n        </h1>\n        <p className=\"text-gray-400\">Unified control for 100+ agents powered by AIRA intelligence</p>\n      </motion.div>\n\n      {error && (\n        <div className=\"bg-red-500/10 border border-red-500/50 rounded-lg p-4 mb-6\">\n          <p className=\"text-red-400\">{error}</p>\n        </div>\n      )}\n\n      {/* Stats Overview */}\n      {stats && (\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95 }}\n            animate={{ opacity: 1, scale: 1 }}\n            className=\"bg-gray-800/50 backdrop-blur-sm border border-cyan-500/30 rounded-lg p-6\"\n          >\n            <div className=\"text-gray-400 text-sm mb-2\">Total Agents</div>\n            <div className=\"text-3xl font-bold text-cyan-400\">\n              {stats.registry_stats.total_agents}\n            </div>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ delay: 0.1 }}\n            className=\"bg-gray-800/50 backdrop-blur-sm border border-green-500/30 rounded-lg p-6\"\n          >\n            <div className=\"text-gray-400 text-sm mb-2\">Healthy Agents</div>\n            <div className=\"text-3xl font-bold text-green-400\">\n              {stats.registry_stats.healthy_agents}\n            </div>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ delay: 0.2 }}\n            className=\"bg-gray-800/50 backdrop-blur-sm border border-yellow-500/30 rounded-lg p-6\"\n          >\n            <div className=\"text-gray-400 text-sm mb-2\">Active Tasks</div>\n            <div className=\"text-3xl font-bold text-yellow-400\">\n              {stats.task_stats.active_tasks}\n            </div>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ delay: 0.3 }}\n            className=\"bg-gray-800/50 backdrop-blur-sm border border-purple-500/30 rounded-lg p-6\"\n          >\n            <div className=\"text-gray-400 text-sm mb-2\">Pending Tasks</div>\n            <div className=\"text-3xl font-bold text-purple-400\">\n              {stats.task_stats.pending_tasks}\n            </div>\n          </motion.div>\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Agents List */}\n        <div className=\"lg:col-span-2\">\n          <motion.div\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            className=\"bg-gray-800/50 backdrop-blur-sm border border-cyan-500/30 rounded-lg p-6\"\n          >\n            <h2 className=\"text-2xl font-bold text-cyan-400 mb-4\">Active Agents</h2>\n            \n            <div className=\"space-y-3 max-h-[600px] overflow-y-auto\">\n              {agents.length === 0 ? (\n                <div className=\"text-center py-8 text-gray-400\">\n                  No agents registered. Agents will appear here when they connect.\n                </div>\n              ) : (\n                agents.map((agent) => (\n                  <motion.div\n                    key={agent.agent_id}\n                    whileHover={{ scale: 1.02 }}\n                    onClick={() => setSelectedAgent(agent)}\n                    className=\"bg-gray-900/50 border border-gray-700/50 rounded-lg p-4 cursor-pointer hover:border-cyan-500/50 transition-all\"\n                  >\n                    <div className=\"flex items-start justify-between mb-2\">\n                      <div>\n                        <h3 className=\"text-lg font-semibold text-white\">{agent.name}</h3>\n                        <p className=\"text-sm text-gray-400\">{agent.type}</p>\n                      </div>\n                      <span className={`text-sm font-medium ${getStatusColor(agent.status)}`}>\n                        {agent.status.toUpperCase()}\n                      </span>\n                    </div>\n\n                    <div className=\"flex items-center gap-4 text-sm text-gray-400 mb-3\">\n                      <span>‚ö° {agent.execution_count} executions</span>\n                      <span>‚ùå {agent.error_count} errors</span>\n                      <span>v{agent.version}</span>\n                    </div>\n\n                    {/* Load indicator */}\n                    <div className=\"w-full bg-gray-700 rounded-full h-2\">\n                      <div\n                        className={`${getLoadColor(agent.current_load)} rounded-full h-2 transition-all`}\n                        style={{ width: `${agent.current_load * 100}%` }}\n                      />\n                    </div>\n                    <div className=\"text-xs text-gray-500 mt-1\">\n                      Load: {Math.round(agent.current_load * 100)}%\n                    </div>\n\n                    <div className=\"mt-2 flex flex-wrap gap-1\">\n                      {agent.capabilities.slice(0, 3).map((cap) => (\n                        <span\n                          key={cap}\n                          className=\"text-xs bg-cyan-500/20 text-cyan-400 px-2 py-1 rounded\"\n                        >\n                          {cap}\n                        </span>\n                      ))}\n                      {agent.capabilities.length > 3 && (\n                        <span className=\"text-xs bg-gray-700 text-gray-400 px-2 py-1 rounded\">\n                          +{agent.capabilities.length - 3} more\n                        </span>\n                      )}\n                    </div>\n                  </motion.div>\n                ))\n              )}\n            </div>\n          </motion.div>\n        </div>\n\n        {/* Tasks and Agent Details */}\n        <div className=\"space-y-6\">\n          {/* Selected Agent Details */}\n          {selectedAgent && (\n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              className=\"bg-gray-800/50 backdrop-blur-sm border border-cyan-500/30 rounded-lg p-6\"\n            >\n              <h2 className=\"text-xl font-bold text-cyan-400 mb-4\">Agent Details</h2>\n              <div className=\"space-y-2 text-sm\">\n                <div><span className=\"text-gray-400\">ID:</span> <span className=\"text-white\">{selectedAgent.agent_id}</span></div>\n                <div><span className=\"text-gray-400\">Name:</span> <span className=\"text-white\">{selectedAgent.name}</span></div>\n                <div><span className=\"text-gray-400\">Type:</span> <span className=\"text-white\">{selectedAgent.type}</span></div>\n                <div><span className=\"text-gray-400\">Max Tasks:</span> <span className=\"text-white\">{selectedAgent.max_concurrent_tasks}</span></div>\n                <div>\n                  <span className=\"text-gray-400\">Capabilities:</span>\n                  <div className=\"mt-2 flex flex-wrap gap-1\">\n                    {selectedAgent.capabilities.map((cap) => (\n                      <span key={cap} className=\"text-xs bg-cyan-500/20 text-cyan-400 px-2 py-1 rounded\">\n                        {cap}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {/* Recent Tasks */}\n          <motion.div\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.1 }}\n            className=\"bg-gray-800/50 backdrop-blur-sm border border-purple-500/30 rounded-lg p-6\"\n          >\n            <h2 className=\"text-xl font-bold text-purple-400 mb-4\">Recent Tasks</h2>\n            \n            <div className=\"space-y-2 max-h-[400px] overflow-y-auto\">\n              {tasks.length === 0 ? (\n                <div className=\"text-center py-4 text-gray-400 text-sm\">\n                  No active tasks\n                </div>\n              ) : (\n                tasks.slice(0, 10).map((task) => (\n                  <div\n                    key={task.task_id}\n                    className=\"bg-gray-900/50 border border-gray-700/50 rounded p-3\"\n                  >\n                    <div className=\"flex items-center justify-between mb-1\">\n                      <span className=\"text-sm font-medium text-white truncate\">{task.task_id}</span>\n                      <span className={`text-xs ${getStatusColor(task.status)}`}>\n                        {task.status}\n                      </span>\n                    </div>\n                    <div className=\"text-xs text-gray-400\">{task.capability}</div>\n                    {task.assigned_agent && (\n                      <div className=\"text-xs text-cyan-400 mt-1\">‚Üí {task.assigned_agent}</div>\n                    )}\n                  </div>\n                ))\n              )}\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["AgentOrchestrationModule","agents","setAgents","useState","tasks","setTasks","stats","setStats","selectedAgent","setSelectedAgent","loading","setLoading","error","setError","useEffect","fetchOrchestrationData","interval","agentsRes","tasksRes","statsRes","agentsData","tasksData","statsData","err","getStatusColor","status","getLoadColor","load","jsx","jsxs","motion","agent","cap","task"],"mappings":"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"}