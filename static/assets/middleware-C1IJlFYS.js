const T={BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,SSR:!1,VITE_API_BASE_URL:"http://localhost:10000"},h=new Map,m=i=>{const l=h.get(i);return l?Object.fromEntries(Object.entries(l.stores).map(([n,s])=>[n,s.getState()])):{}},E=(i,l,n)=>{if(i===void 0)return{type:"untracked",connection:l.connect(n)};const s=h.get(n.name);if(s)return{type:"tracked",store:i,...s};const e={connection:l.connect(n),stores:{}};return h.set(n.name,e),{type:"tracked",store:i,...e}},I=(i,l)=>{if(l===void 0)return;const n=h.get(i);n&&(delete n.stores[l],Object.keys(n.stores).length===0&&h.delete(i))},C=i=>{var l,n;if(!i)return;const s=i.split(`
`),e=s.findIndex(y=>y.includes("api.setState"));if(e<0)return;const b=((l=s[e+1])==null?void 0:l.trim())||"";return(n=/.+ (.+) .+/.exec(b))==null?void 0:n[1]},w=(i,l={})=>(n,s,e)=>{const{enabled:b,anonymousActionType:y,store:r,...u}=l;let p;try{p=(b??(T?"production":void 0)!=="production")&&window.__REDUX_DEVTOOLS_EXTENSION__}catch{}if(!p)return i(n,s,e);const{connection:t,...f}=E(r,p,u);let S=!0;e.setState=(c,v,o)=>{const a=n(c,v);if(!S)return a;const O=o===void 0?{type:y||C(new Error().stack)||"anonymous"}:typeof o=="string"?{type:o}:o;return r===void 0?(t==null||t.send(O,s()),a):(t==null||t.send({...O,type:`${r}/${O.type}`},{...m(u.name),[r]:e.getState()}),a)},e.devtools={cleanup:()=>{t&&typeof t.unsubscribe=="function"&&t.unsubscribe(),I(u.name,r)}};const d=(...c)=>{const v=S;S=!1,n(...c),S=v},_=i(e.setState,s,e);if(f.type==="untracked"?t==null||t.init(_):(f.stores[f.store]=e,t==null||t.init(Object.fromEntries(Object.entries(f.stores).map(([c,v])=>[c,c===f.store?_:v.getState()])))),e.dispatchFromDevtools&&typeof e.dispatch=="function"){let c=!1;const v=e.dispatch;e.dispatch=(...o)=>{(T?"production":void 0)!=="production"&&o[0].type==="__setState"&&!c&&(console.warn('[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'),c=!0),v(...o)}}return t.subscribe(c=>{var v;switch(c.type){case"ACTION":if(typeof c.payload!="string"){console.error("[zustand devtools middleware] Unsupported action format");return}return g(c.payload,o=>{if(o.type==="__setState"){if(r===void 0){d(o.state);return}Object.keys(o.state).length!==1&&console.error(`
                    [zustand devtools middleware] Unsupported __setState action format.
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `);const a=o.state[r];if(a==null)return;JSON.stringify(e.getState())!==JSON.stringify(a)&&d(a);return}e.dispatchFromDevtools&&typeof e.dispatch=="function"&&e.dispatch(o)});case"DISPATCH":switch(c.payload.type){case"RESET":return d(_),r===void 0?t==null?void 0:t.init(e.getState()):t==null?void 0:t.init(m(u.name));case"COMMIT":if(r===void 0){t==null||t.init(e.getState());return}return t==null?void 0:t.init(m(u.name));case"ROLLBACK":return g(c.state,o=>{if(r===void 0){d(o),t==null||t.init(e.getState());return}d(o[r]),t==null||t.init(m(u.name))});case"JUMP_TO_STATE":case"JUMP_TO_ACTION":return g(c.state,o=>{if(r===void 0){d(o);return}JSON.stringify(e.getState())!==JSON.stringify(o[r])&&d(o[r])});case"IMPORT_STATE":{const{nextLiftedState:o}=c.payload,a=(v=o.computedStates.slice(-1)[0])==null?void 0:v.state;if(!a)return;d(r===void 0?a:a[r]),t==null||t.send(null,o);return}case"PAUSE_RECORDING":return S=!S}return}}),_},D=w,g=(i,l)=>{let n;try{n=JSON.parse(i)}catch(s){console.error("[zustand devtools middleware] Could not parse the received json",s)}n!==void 0&&l(n)},R=i=>(l,n,s)=>{const e=s.subscribe;return s.subscribe=(y,r,u)=>{let p=y;if(r){const t=(u==null?void 0:u.equalityFn)||Object.is;let f=y(s.getState());p=S=>{const d=y(S);if(!t(f,d)){const _=f;r(f=d,_)}},u!=null&&u.fireImmediately&&r(f,f)}return e(p)},i(l,n,s)},A=R;export{D as d,A as s};
//# sourceMappingURL=middleware-C1IJlFYS.js.map
