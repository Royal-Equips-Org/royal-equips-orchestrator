{"version":3,"file":"FinanceModule-C5CE1K80.js","sources":["../../apps/command-center-ui/node_modules/lucide-react/dist/esm/icons/download.js","../../apps/command-center-ui/src/stores/socket-store.ts","../../apps/command-center-ui/src/modules/finance/FinanceModule.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Download = createLucideIcon(\"Download\", [\n  [\"path\", { d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\", key: \"ih7n3h\" }],\n  [\"polyline\", { points: \"7 10 12 15 17 10\", key: \"2ggqvy\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"15\", y2: \"3\", key: \"1vk2je\" }]\n]);\n\nexport { Download as default };\n//# sourceMappingURL=download.js.map\n","import { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\ninterface SocketState {\r\n  socket: Socket | null;\r\n  isConnected: boolean;\r\n  error: string | null;\r\n  reconnectAttempts: number;\r\n  messages: Array<{\r\n    id: string;\r\n    type: string;\r\n    data: any;\r\n    timestamp: number;\r\n  }>;\r\n}\r\n\r\ninterface SocketActions {\r\n  connect: (url?: string) => void;\r\n  disconnect: () => void;\r\n  sendMessage: (type: string, data: any) => void;\r\n  clearMessages: () => void;\r\n  clearError: () => void;\r\n}\r\n\r\ntype SocketStore = SocketState & SocketActions;\r\n\r\nexport const useSocketStore = create<SocketStore>()(\r\n  subscribeWithSelector((set, get) => ({\r\n    // State\r\n    socket: null,\r\n    isConnected: false,\r\n    error: null,\r\n    reconnectAttempts: 0,\r\n    messages: [],\r\n\r\n    // Actions\r\n    connect: (url = 'http://localhost:10000') => {\r\n      const { socket } = get();\r\n      \r\n      if (socket) {\r\n        console.warn('Socket already connected');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const newSocket = io(url, {\r\n          transports: ['websocket', 'polling'],\r\n          timeout: 20000,\r\n          reconnection: true,\r\n          reconnectionAttempts: 5,\r\n          reconnectionDelay: 1000\r\n        });\r\n\r\n        // Connection events\r\n        newSocket.on('connect', () => {\r\n          set({ \r\n            isConnected: true, \r\n            error: null, \r\n            reconnectAttempts: 0 \r\n          });\r\n          console.log('Socket connected successfully');\r\n        });\r\n\r\n        newSocket.on('disconnect', (reason: any) => {\r\n          set({ isConnected: false });\r\n          console.log('Socket disconnected:', reason);\r\n        });\r\n\r\n        newSocket.on('connect_error', (error: any) => {\r\n          set(state => ({ \r\n            error: error.message,\r\n            reconnectAttempts: state.reconnectAttempts + 1\r\n          }));\r\n          console.error('Socket connection error:', error);\r\n        });\r\n\r\n        // Generic message handler\r\n        newSocket.onAny((eventName: any, data: any) => {\r\n          set(state => ({\r\n            messages: [\r\n              ...state.messages.slice(-99), // Keep last 100 messages\r\n              {\r\n                id: `${Date.now()}-${Math.random()}`,\r\n                type: eventName,\r\n                data,\r\n                timestamp: Date.now()\r\n              }\r\n            ]\r\n          }));\r\n        });\r\n\r\n        set({ socket: newSocket });\r\n      } catch (error) {\r\n        set({ \r\n          error: error instanceof Error ? error.message : 'Failed to connect to socket' \r\n        });\r\n      }\r\n    },\r\n\r\n    disconnect: () => {\r\n      const { socket } = get();\r\n      \r\n      if (socket) {\r\n        socket.disconnect();\r\n        set({ \r\n          socket: null, \r\n          isConnected: false, \r\n          error: null,\r\n          reconnectAttempts: 0 \r\n        });\r\n      }\r\n    },\r\n\r\n    sendMessage: (type: string, data: any) => {\r\n      const { socket, isConnected } = get();\r\n      \r\n      if (!socket || !isConnected) {\r\n        console.warn('Cannot send message: Socket not connected');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        socket.emit(type, data);\r\n      } catch (error) {\r\n        set({ \r\n          error: error instanceof Error ? error.message : 'Failed to send message' \r\n        });\r\n      }\r\n    },\r\n\r\n    clearMessages: () => {\r\n      set({ messages: [] });\r\n    },\r\n\r\n    clearError: () => {\r\n      set({ error: null });\r\n    }\r\n  }))\r\n);\r\n\r\n// Additional export for module compatibility - returns the socket instance\r\nexport const useModuleSocket = (module?: string) => {\r\n  const { socket, isConnected } = useSocketStore();\r\n  \r\n  // Return a socket-like interface for module-specific usage\r\n  return socket && isConnected ? socket : {\r\n    on: () => {},\r\n    off: () => {},\r\n    emit: () => {},\r\n    connected: false\r\n  };\r\n};","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { \r\n  TrendingUp, \r\n  DollarSign, \r\n  CreditCard, \r\n  AlertTriangle,\r\n  Activity,\r\n  BarChart3,\r\n  PieChart,\r\n  Calendar,\r\n  Download,\r\n  RefreshCw,\r\n  Shield,\r\n  Zap,\r\n  Target,\r\n  Globe,\r\n  Clock,\r\n  ArrowUp,\r\n  ArrowDown,\r\n  Eye,\r\n  Settings\r\n} from 'lucide-react';\r\n\r\nimport { useSocketStore } from '../../stores/socket-store';\r\nimport { usePerformance } from '../../hooks/usePerformance';\r\n\r\ninterface FinancialMetrics {\r\n  total_revenue: number;\r\n  total_expenses: number;\r\n  net_profit: number;\r\n  profit_margin: number;\r\n  transaction_count: number;\r\n  avg_transaction_value: number;\r\n  conversion_rate: number;\r\n  monthly_recurring_revenue: number;\r\n}\r\n\r\ninterface Transaction {\r\n  id: string;\r\n  type: string;\r\n  amount: number;\r\n  currency: string;\r\n  status: string;\r\n  payment_method: string;\r\n  gateway: string;\r\n  customer_id?: string;\r\n  order_id?: string;\r\n  description?: string;\r\n  processed_at: string;\r\n  fees: number;\r\n  net_amount: number;\r\n}\r\n\r\ninterface FraudAlert {\r\n  id: string;\r\n  transaction_id: string;\r\n  risk_score: number;\r\n  alert_type: string;\r\n  description: string;\r\n  created_at: string;\r\n  status: string;\r\n}\r\n\r\ninterface DashboardData {\r\n  overview: {\r\n    total_revenue_today: number;\r\n    pending_transactions: number;\r\n    failed_transactions: number;\r\n    fraud_alerts: number;\r\n    active_payment_methods: number;\r\n    last_updated: string;\r\n  };\r\n  financial_metrics: FinancialMetrics;\r\n  cash_flow: any;\r\n  recent_activity: Transaction[];\r\n  fraud_alerts: FraudAlert[];\r\n  performance_metrics: any;\r\n}\r\n\r\nconst FinanceModule: React.FC = () => {\r\n  const [dashboardData, setDashboardData] = useState<DashboardData | null>(null);\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [selectedPeriod, setSelectedPeriod] = useState('daily');\r\n  const [selectedView, setSelectedView] = useState('dashboard');\r\n\r\n  const socketStore = useSocketStore();\r\n  const { trackPerformance, trackInteraction } = usePerformance();\r\n\r\n  // Fetch dashboard data\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      setRefreshing(true);\r\n      const response = await fetch('/api/finance/dashboard');\r\n      if (!response.ok) throw new Error('Failed to fetch dashboard data');\r\n      \r\n      const result = await response.json();\r\n      if (result.status === 'success') {\r\n        setDashboardData(result.data);\r\n        setError(null);\r\n      } else {\r\n        throw new Error(result.error || 'Unknown error');\r\n      }\r\n    } catch (err) {\r\n      console.error('Finance dashboard error:', err);\r\n      setError(err instanceof Error ? err.message : 'Failed to load finance data');\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  // Fetch transactions\r\n  const fetchTransactions = async (filters: any = {}) => {\r\n    try {\r\n      const params = new URLSearchParams(filters);\r\n      const response = await fetch(`/api/finance/transactions?${params}`);\r\n      if (!response.ok) throw new Error('Failed to fetch transactions');\r\n      \r\n      const result = await response.json();\r\n      if (result.status === 'success') {\r\n        setTransactions(result.data.transactions);\r\n      }\r\n    } catch (err) {\r\n      console.error('Transaction fetch error:', err);\r\n    }\r\n  };\r\n\r\n  // Initial data load\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n    fetchTransactions();\r\n\r\n    // Set up refresh interval\r\n    const interval = setInterval(fetchDashboardData, 30000); // 30 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Socket event handlers\r\n  useEffect(() => {\r\n    const socket = socketStore.socket;\r\n    if (!socket) return;\r\n\r\n    socket.on('finance_update', (data: any) => {\r\n      setDashboardData(prev => prev ? { ...prev, ...data } : data);\r\n      trackPerformance('finance_realtime_update');\r\n    });\r\n\r\n    socket.on('transaction_processed', (transaction: any) => {\r\n      setTransactions(prev => [transaction, ...prev.slice(0, 49)]);\r\n      trackPerformance('finance_transaction_update');\r\n    });\r\n\r\n    socket.on('fraud_alert', (alert: any) => {\r\n      if (dashboardData) {\r\n        setDashboardData(prev => prev ? {\r\n          ...prev,\r\n          fraud_alerts: [alert, ...prev.fraud_alerts]\r\n        } : prev);\r\n      }\r\n      trackPerformance('finance_fraud_alert');\r\n    });\r\n\r\n    return () => {\r\n      socket.off('finance_update');\r\n      socket.off('transaction_processed');\r\n      socket.off('fraud_alert');\r\n    };\r\n  }, [socketStore.socket, dashboardData, trackPerformance]);\r\n\r\n  // Calculated metrics\r\n  const calculatedMetrics = useMemo(() => {\r\n    if (!dashboardData) return null;\r\n\r\n    const { financial_metrics, overview } = dashboardData;\r\n    \r\n    return {\r\n      revenueGrowth: financial_metrics.profit_margin > 0 ? 15.8 : -5.2, // Simulated growth\r\n      conversionTrend: financial_metrics.conversion_rate > 2.5 ? 'up' : 'down',\r\n      fraudRate: (overview.fraud_alerts / (overview.fraud_alerts + transactions.length)) * 100 || 0,\r\n      avgProcessingTime: 2.3, // Simulated processing time\r\n      topPaymentMethod: 'Credit Card', // Would be calculated from actual data\r\n      cashFlowHealth: financial_metrics.net_profit > 0 ? 'healthy' : 'warning'\r\n    };\r\n  }, [dashboardData, transactions]);\r\n\r\n  const formatCurrency = (amount: number, currency = 'USD') => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: currency\r\n    }).format(amount);\r\n  };\r\n\r\n  const formatPercent = (value: number) => {\r\n    return `${value.toFixed(1)}%`;\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status.toLowerCase()) {\r\n      case 'captured':\r\n      case 'completed':\r\n        return 'text-green-400';\r\n      case 'pending':\r\n        return 'text-yellow-400';\r\n      case 'failed':\r\n      case 'declined':\r\n        return 'text-red-400';\r\n      default:\r\n        return 'text-gray-400';\r\n    }\r\n  };\r\n\r\n  const getRiskColor = (score: number) => {\r\n    if (score >= 70) return 'text-red-400';\r\n    if (score >= 55) return 'text-yellow-400';\r\n    return 'text-green-400';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-96\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <RefreshCw className=\"h-6 w-6 animate-spin text-cyan-400\" />\r\n          <span className=\"text-lg\">Loading financial data...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-red-900/20 border border-red-500/20 rounded-lg p-6\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <AlertTriangle className=\"h-6 w-6 text-red-400\" />\r\n          <h3 className=\"text-lg font-semibold text-red-400\">Finance Module Error</h3>\r\n        </div>\r\n        <p className=\"text-red-300 mb-4\">{error}</p>\r\n        <button\r\n          onClick={fetchDashboardData}\r\n          className=\"px-4 py-2 bg-red-600 hover:bg-red-700 rounded-lg transition-colors\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!dashboardData) return null;\r\n\r\n  const { overview, financial_metrics, recent_activity, fraud_alerts } = dashboardData;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"p-2 bg-green-500/20 rounded-lg\">\r\n            <DollarSign className=\"h-6 w-6 text-green-400\" />\r\n          </div>\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold\">Financial Intelligence</h1>\r\n            <p className=\"text-gray-400\">Real-time financial operations & analytics</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center space-x-3\">\r\n          {/* Period Selector */}\r\n          <select\r\n            value={selectedPeriod}\r\n            onChange={(e) => {\r\n              setSelectedPeriod(e.target.value);\r\n              trackInteraction('finance_period_change');\r\n            }}\r\n            className=\"bg-gray-800 border border-gray-700 rounded-lg px-3 py-2 text-sm\"\r\n          >\r\n            <option value=\"daily\">Today</option>\r\n            <option value=\"weekly\">This Week</option>\r\n            <option value=\"monthly\">This Month</option>\r\n            <option value=\"quarterly\">This Quarter</option>\r\n          </select>\r\n\r\n          {/* View Selector */}\r\n          <select\r\n            value={selectedView}\r\n            onChange={(e) => setSelectedView(e.target.value)}\r\n            className=\"bg-gray-800 border border-gray-700 rounded-lg px-3 py-2 text-sm\"\r\n          >\r\n            <option value=\"dashboard\">Dashboard</option>\r\n            <option value=\"transactions\">Transactions</option>\r\n            <option value=\"analytics\">Analytics</option>\r\n            <option value=\"fraud\">Fraud Detection</option>\r\n          </select>\r\n\r\n          <button\r\n            onClick={fetchDashboardData}\r\n            disabled={refreshing}\r\n            className=\"flex items-center space-x-2 px-3 py-2 bg-cyan-600 hover:bg-cyan-700 disabled:opacity-50 rounded-lg transition-colors\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''}`} />\r\n            <span>Refresh</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Metrics Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {/* Total Revenue Today */}\r\n        <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-400\">Revenue Today</p>\r\n              <p className=\"text-2xl font-bold text-green-400\">\r\n                {formatCurrency(overview.total_revenue_today)}\r\n              </p>\r\n            </div>\r\n            <div className=\"p-3 bg-green-500/20 rounded-lg\">\r\n              <TrendingUp className=\"h-6 w-6 text-green-400\" />\r\n            </div>\r\n          </div>\r\n          {calculatedMetrics && (\r\n            <div className=\"flex items-center mt-2 text-sm\">\r\n              {calculatedMetrics.revenueGrowth > 0 ? (\r\n                <ArrowUp className=\"h-4 w-4 text-green-400 mr-1\" />\r\n              ) : (\r\n                <ArrowDown className=\"h-4 w-4 text-red-400 mr-1\" />\r\n              )}\r\n              <span className={calculatedMetrics.revenueGrowth > 0 ? 'text-green-400' : 'text-red-400'}>\r\n                {formatPercent(Math.abs(calculatedMetrics.revenueGrowth))}\r\n              </span>\r\n              <span className=\"text-gray-400 ml-1\">vs yesterday</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Transaction Stats */}\r\n        <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-400\">Transactions</p>\r\n              <p className=\"text-2xl font-bold text-cyan-400\">\r\n                {financial_metrics.transaction_count.toLocaleString()}\r\n              </p>\r\n            </div>\r\n            <div className=\"p-3 bg-cyan-500/20 rounded-lg\">\r\n              <Activity className=\"h-6 w-6 text-cyan-400\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center mt-2 text-sm\">\r\n            <span className=\"text-gray-400\">Avg: </span>\r\n            <span className=\"text-cyan-400 ml-1\">\r\n              {formatCurrency(financial_metrics.avg_transaction_value)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Conversion Rate */}\r\n        <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-400\">Conversion Rate</p>\r\n              <p className=\"text-2xl font-bold text-yellow-400\">\r\n                {formatPercent(financial_metrics.conversion_rate)}\r\n              </p>\r\n            </div>\r\n            <div className=\"p-3 bg-yellow-500/20 rounded-lg\">\r\n              <Target className=\"h-6 w-6 text-yellow-400\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center mt-2 text-sm\">\r\n            {calculatedMetrics?.conversionTrend === 'up' ? (\r\n              <ArrowUp className=\"h-4 w-4 text-green-400 mr-1\" />\r\n            ) : (\r\n              <ArrowDown className=\"h-4 w-4 text-red-400 mr-1\" />\r\n            )}\r\n            <span className=\"text-gray-400\">trend</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Security Alerts */}\r\n        <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-400\">Fraud Alerts</p>\r\n              <p className=\"text-2xl font-bold text-red-400\">\r\n                {overview.fraud_alerts}\r\n              </p>\r\n            </div>\r\n            <div className=\"p-3 bg-red-500/20 rounded-lg\">\r\n              <Shield className=\"h-6 w-6 text-red-400\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center mt-2 text-sm\">\r\n            <span className=\"text-gray-400\">Risk: </span>\r\n            <span className={getRiskColor(calculatedMetrics?.fraudRate || 0)}>\r\n              {formatPercent(calculatedMetrics?.fraudRate || 0)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content Area */}\r\n      {selectedView === 'dashboard' && (\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n          {/* Recent Transactions */}\r\n          <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold\">Recent Transactions</h3>\r\n              <button\r\n                onClick={() => setSelectedView('transactions')}\r\n                className=\"text-cyan-400 hover:text-cyan-300 text-sm flex items-center space-x-1\"\r\n              >\r\n                <Eye className=\"h-4 w-4\" />\r\n                <span>View All</span>\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"space-y-3\">\r\n              {recent_activity.slice(0, 6).map((transaction) => (\r\n                <div\r\n                  key={transaction.id}\r\n                  className=\"flex items-center justify-between p-3 bg-gray-700/30 rounded-lg\"\r\n                >\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <div className={`p-2 rounded-lg ${\r\n                      transaction.type === 'revenue' ? 'bg-green-500/20' :\r\n                      transaction.type === 'expense' ? 'bg-red-500/20' :\r\n                      'bg-gray-500/20'\r\n                    }`}>\r\n                      {transaction.type === 'revenue' ? (\r\n                        <ArrowUp className=\"h-4 w-4 text-green-400\" />\r\n                      ) : (\r\n                        <ArrowDown className=\"h-4 w-4 text-red-400\" />\r\n                      )}\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-medium\">\r\n                        {formatCurrency(transaction.amount, transaction.currency)}\r\n                      </p>\r\n                      <p className=\"text-sm text-gray-400\">\r\n                        {transaction.payment_method} • {transaction.gateway}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <span className={`px-2 py-1 rounded text-xs font-medium ${getStatusColor(transaction.status)}`}>\r\n                      {transaction.status}\r\n                    </span>\r\n                    <p className=\"text-xs text-gray-400 mt-1\">\r\n                      {new Date(transaction.processed_at).toLocaleTimeString()}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Financial Health */}\r\n          <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6\">\r\n            <h3 className=\"text-lg font-semibold mb-4\">Financial Health</h3>\r\n            \r\n            <div className=\"space-y-4\">\r\n              {/* Profit Margin */}\r\n              <div>\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <span className=\"text-sm text-gray-400\">Profit Margin</span>\r\n                  <span className=\"text-sm font-medium\">\r\n                    {formatPercent(financial_metrics.profit_margin)}\r\n                  </span>\r\n                </div>\r\n                <div className=\"h-2 bg-gray-700 rounded-full\">\r\n                  <div\r\n                    className={`h-2 rounded-full ${\r\n                      financial_metrics.profit_margin > 20 ? 'bg-green-500' :\r\n                      financial_metrics.profit_margin > 10 ? 'bg-yellow-500' :\r\n                      'bg-red-500'\r\n                    }`}\r\n                    style={{ width: `${Math.max(5, Math.min(100, financial_metrics.profit_margin))}%` }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Cash Flow */}\r\n              <div>\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <span className=\"text-sm text-gray-400\">Net Profit</span>\r\n                  <span className={`text-sm font-medium ${\r\n                    financial_metrics.net_profit > 0 ? 'text-green-400' : 'text-red-400'\r\n                  }`}>\r\n                    {formatCurrency(financial_metrics.net_profit)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Monthly Recurring Revenue */}\r\n              <div>\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <span className=\"text-sm text-gray-400\">Monthly Recurring Revenue</span>\r\n                  <span className=\"text-sm font-medium text-cyan-400\">\r\n                    {formatCurrency(financial_metrics.monthly_recurring_revenue)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Processing Health */}\r\n              <div>\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <span className=\"text-sm text-gray-400\">Avg Processing Time</span>\r\n                  <span className=\"text-sm font-medium text-green-400\">\r\n                    {calculatedMetrics?.avgProcessingTime}s\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {selectedView === 'transactions' && (\r\n        <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6\">\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h3 className=\"text-lg font-semibold\">Transaction History</h3>\r\n            <button className=\"flex items-center space-x-2 px-3 py-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors\">\r\n              <Download className=\"h-4 w-4\" />\r\n              <span>Export</span>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full\">\r\n              <thead>\r\n                <tr className=\"border-b border-gray-700\">\r\n                  <th className=\"text-left pb-3 text-sm text-gray-400\">Date/Time</th>\r\n                  <th className=\"text-left pb-3 text-sm text-gray-400\">Type</th>\r\n                  <th className=\"text-left pb-3 text-sm text-gray-400\">Amount</th>\r\n                  <th className=\"text-left pb-3 text-sm text-gray-400\">Method</th>\r\n                  <th className=\"text-left pb-3 text-sm text-gray-400\">Status</th>\r\n                  <th className=\"text-left pb-3 text-sm text-gray-400\">Gateway</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {transactions.map((transaction) => (\r\n                  <tr key={transaction.id} className=\"border-b border-gray-800\">\r\n                    <td className=\"py-3 text-sm\">\r\n                      {new Date(transaction.processed_at).toLocaleString()}\r\n                    </td>\r\n                    <td className=\"py-3\">\r\n                      <span className={`px-2 py-1 rounded text-xs ${\r\n                        transaction.type === 'revenue' ? 'bg-green-500/20 text-green-400' :\r\n                        transaction.type === 'expense' ? 'bg-red-500/20 text-red-400' :\r\n                        'bg-gray-500/20 text-gray-400'\r\n                      }`}>\r\n                        {transaction.type}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"py-3 font-medium\">\r\n                      {formatCurrency(transaction.amount, transaction.currency)}\r\n                    </td>\r\n                    <td className=\"py-3 text-sm text-gray-400\">\r\n                      {transaction.payment_method}\r\n                    </td>\r\n                    <td className=\"py-3\">\r\n                      <span className={`px-2 py-1 rounded text-xs ${getStatusColor(transaction.status)}`}>\r\n                        {transaction.status}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"py-3 text-sm text-gray-400\">\r\n                      {transaction.gateway}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {selectedView === 'fraud' && (\r\n        <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6\">\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h3 className=\"text-lg font-semibold flex items-center space-x-2\">\r\n              <Shield className=\"h-5 w-5 text-red-400\" />\r\n              <span>Fraud Detection Alerts</span>\r\n            </h3>\r\n            <div className=\"flex items-center space-x-2 text-sm\">\r\n              <span className=\"text-gray-400\">Real-time monitoring active</span>\r\n              <div className=\"h-2 w-2 bg-green-500 rounded-full animate-pulse\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-3\">\r\n            {fraud_alerts.length > 0 ? (\r\n              fraud_alerts.map((alert) => (\r\n                <div\r\n                  key={alert.id}\r\n                  className={`p-4 rounded-lg border ${\r\n                    alert.risk_score >= 70 ? 'bg-red-900/20 border-red-500/30' :\r\n                    alert.risk_score >= 55 ? 'bg-yellow-900/20 border-yellow-500/30' :\r\n                    'bg-blue-900/20 border-blue-500/30'\r\n                  }`}\r\n                >\r\n                  <div className=\"flex items-start justify-between\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <AlertTriangle className={`h-5 w-5 ${getRiskColor(alert.risk_score)}`} />\r\n                        <span className=\"font-medium\">{alert.alert_type}</span>\r\n                        <span className={`px-2 py-1 rounded text-xs ${getRiskColor(alert.risk_score)}`}>\r\n                          Risk: {alert.risk_score}%\r\n                        </span>\r\n                      </div>\r\n                      <p className=\"text-sm text-gray-400 mt-2\">{alert.description}</p>\r\n                      <p className=\"text-xs text-gray-500 mt-1\">\r\n                        Transaction ID: {alert.transaction_id}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-400\">\r\n                      {new Date(alert.created_at).toLocaleTimeString()}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"text-center py-8 text-gray-400\">\r\n                <Shield className=\"h-12 w-12 mx-auto mb-3 opacity-50\" />\r\n                <p>No fraud alerts detected</p>\r\n                <p className=\"text-sm\">All transactions appear legitimate</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Performance Footer */}\r\n      <div className=\"bg-gray-800/30 border border-gray-700 rounded-lg p-4\">\r\n        <div className=\"flex items-center justify-between text-sm text-gray-400\">\r\n          <div className=\"flex items-center space-x-6\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Globe className=\"h-4 w-4\" />\r\n              <span>Global Payments</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Zap className=\"h-4 w-4\" />\r\n              <span>Real-time Processing</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Clock className=\"h-4 w-4\" />\r\n              <span>Last updated: {new Date(overview.last_updated).toLocaleTimeString()}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <span>Uptime: 99.9%</span>\r\n            <div className=\"h-2 w-2 bg-green-500 rounded-full\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinanceModule;"],"names":["Download","createLucideIcon","useSocketStore","create","subscribeWithSelector","set","get","url","socket","newSocket","io","reason","error","state","eventName","data","type","isConnected","FinanceModule","dashboardData","setDashboardData","useState","transactions","setTransactions","loading","setLoading","setError","refreshing","setRefreshing","selectedPeriod","setSelectedPeriod","selectedView","setSelectedView","socketStore","trackPerformance","trackInteraction","usePerformance","fetchDashboardData","response","result","err","fetchTransactions","filters","params","useEffect","interval","prev","transaction","alert","calculatedMetrics","useMemo","financial_metrics","overview","formatCurrency","amount","currency","formatPercent","value","getStatusColor","status","getRiskColor","score","jsxs","jsx","RefreshCw","AlertTriangle","recent_activity","fraud_alerts","DollarSign","e","TrendingUp","ArrowUp","ArrowDown","Activity","Target","Shield","Eye","Globe","Zap","Clock"],"mappings":"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","x_google_ignoreList":[0]}