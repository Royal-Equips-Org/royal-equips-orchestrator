{"version":3,"file":"CustomerSupportModule-DJOLQ7q2.js","sources":["../../apps/command-center-ui/node_modules/lucide-react/dist/esm/icons/bot.js","../../apps/command-center-ui/node_modules/lucide-react/dist/esm/icons/ellipsis-vertical.js","../../apps/command-center-ui/node_modules/lucide-react/dist/esm/icons/filter.js","../../apps/command-center-ui/node_modules/lucide-react/dist/esm/icons/message-circle.js","../../apps/command-center-ui/src/hooks/useSocket.ts","../../apps/command-center-ui/src/modules/customer-support/CustomerSupportModule.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Bot = createLucideIcon(\"Bot\", [\n  [\"path\", { d: \"M12 8V4H8\", key: \"hb8ula\" }],\n  [\"rect\", { width: \"16\", height: \"12\", x: \"4\", y: \"8\", rx: \"2\", key: \"enze0r\" }],\n  [\"path\", { d: \"M2 14h2\", key: \"vft8re\" }],\n  [\"path\", { d: \"M20 14h2\", key: \"4cs60a\" }],\n  [\"path\", { d: \"M15 13v2\", key: \"1xurst\" }],\n  [\"path\", { d: \"M9 13v2\", key: \"rq6x2g\" }]\n]);\n\nexport { Bot as default };\n//# sourceMappingURL=bot.js.map\n","/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst EllipsisVertical = createLucideIcon(\"EllipsisVertical\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"1\", key: \"41hilf\" }],\n  [\"circle\", { cx: \"12\", cy: \"5\", r: \"1\", key: \"gxeob9\" }],\n  [\"circle\", { cx: \"12\", cy: \"19\", r: \"1\", key: \"lyex9k\" }]\n]);\n\nexport { EllipsisVertical as default };\n//# sourceMappingURL=ellipsis-vertical.js.map\n","/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Filter = createLucideIcon(\"Filter\", [\n  [\"polygon\", { points: \"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3\", key: \"1yg77f\" }]\n]);\n\nexport { Filter as default };\n//# sourceMappingURL=filter.js.map\n","/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst MessageCircle = createLucideIcon(\"MessageCircle\", [\n  [\"path\", { d: \"M7.9 20A9 9 0 1 0 4 16.1L2 22Z\", key: \"vv11sd\" }]\n]);\n\nexport { MessageCircle as default };\n//# sourceMappingURL=message-circle.js.map\n","import { useEffect, useState } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\ninterface UseSocketReturn {\r\n  socket: Socket | null;\r\n  isConnected: boolean;\r\n  connect: () => void;\r\n  disconnect: () => void;\r\n  on: (event: string, callback: (data: any) => void) => void;\r\n  off: (event: string, callback?: (data: any) => void) => void;\r\n}\r\n\r\nexport function useSocket(url: string = 'http://localhost:10000'): UseSocketReturn {\r\n  const [socket, setSocket] = useState<Socket | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  const connect = () => {\r\n    if (!socket) {\r\n      const newSocket = io(url, {\r\n        transports: ['websocket', 'polling'],\r\n        timeout: 20000,\r\n        reconnection: true,\r\n        reconnectionAttempts: 5,\r\n        reconnectionDelay: 1000\r\n      });\r\n\r\n      newSocket.on('connect', () => {\r\n        setIsConnected(true);\r\n        console.log('Socket connected');\r\n      });\r\n\r\n      newSocket.on('disconnect', () => {\r\n        setIsConnected(false);\r\n        console.log('Socket disconnected');\r\n      });\r\n\r\n      newSocket.on('connect_error', (error: any) => {\r\n        console.error('Socket connection error:', error);\r\n        setIsConnected(false);\r\n      });\r\n\r\n      setSocket(newSocket);\r\n    }\r\n  };\r\n\r\n  const disconnect = () => {\r\n    if (socket) {\r\n      socket.disconnect();\r\n      setSocket(null);\r\n      setIsConnected(false);\r\n    }\r\n  };\r\n\r\n  const on = (event: string, callback: (data: any) => void) => {\r\n    if (socket) {\r\n      socket.on(event, callback);\r\n    }\r\n  };\r\n\r\n  const off = (event: string, callback?: (data: any) => void) => {\r\n    if (socket) {\r\n      if (callback) {\r\n        socket.off(event, callback);\r\n      } else {\r\n        socket.off(event);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    socket,\r\n    isConnected,\r\n    connect,\r\n    disconnect,\r\n    on,\r\n    off\r\n  };\r\n}","import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { \r\n  MessageCircle, \r\n  Clock, \r\n  AlertTriangle, \r\n  CheckCircle, \r\n  TrendingUp, \r\n  Users, \r\n  Bot, \r\n  Send,\r\n  Filter,\r\n  Search,\r\n  MoreVertical,\r\n  Star,\r\n  Mail,\r\n  Phone\r\n} from 'lucide-react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useSocket } from '../../hooks/useSocket';\r\nimport { usePerformance } from '../../hooks/usePerformance';\r\n\r\ninterface SupportTicket {\r\n  id: string;\r\n  customer_email: string;\r\n  subject: string;\r\n  description: string;\r\n  priority: 'low' | 'medium' | 'high' | 'critical' | 'urgent';\r\n  status: 'new' | 'open' | 'pending' | 'resolved' | 'closed' | 'escalated';\r\n  category: string;\r\n  sentiment_score: number;\r\n  order_id?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  resolved_at?: string;\r\n  agent_response?: string;\r\n  customer_satisfaction_rating?: number;\r\n}\r\n\r\ninterface SupportMetrics {\r\n  total_tickets: number;\r\n  open_tickets: number;\r\n  resolved_today: number;\r\n  avg_response_time_hours: number;\r\n  customer_satisfaction: number;\r\n  escalation_rate: number;\r\n  ai_responses_generated: number;\r\n  sentiment_score: number;\r\n}\r\n\r\ninterface AIResponseOptions {\r\n  tone: 'professional' | 'friendly' | 'empathetic' | 'formal';\r\n  maxLength: number;\r\n  includeOrderInfo: boolean;\r\n  personalizeResponse: boolean;\r\n}\r\n\r\nconst CustomerSupportModule: React.FC = () => {\r\n  // State management\r\n  const [tickets, setTickets] = useState<SupportTicket[]>([]);\r\n  const [metrics, setMetrics] = useState<SupportMetrics>({\r\n    total_tickets: 0,\r\n    open_tickets: 0,\r\n    resolved_today: 0,\r\n    avg_response_time_hours: 0,\r\n    customer_satisfaction: 0,\r\n    escalation_rate: 0,\r\n    ai_responses_generated: 0,\r\n    sentiment_score: 0\r\n  });\r\n  const [selectedTicket, setSelectedTicket] = useState<SupportTicket | null>(null);\r\n  const [filters, setFilters] = useState({\r\n    status: '',\r\n    priority: '',\r\n    category: '',\r\n    search: ''\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [aiGenerating, setAiGenerating] = useState(false);\r\n  const [aiResponse, setAiResponse] = useState('');\r\n  const [aiOptions, setAiOptions] = useState<AIResponseOptions>({\r\n    tone: 'professional',\r\n    maxLength: 500,\r\n    includeOrderInfo: true,\r\n    personalizeResponse: true\r\n  });\r\n  const [newTicket, setNewTicket] = useState({\r\n    customer_email: '',\r\n    subject: '',\r\n    description: '',\r\n    priority: 'medium' as const,\r\n    category: 'general'\r\n  });\r\n  const [showNewTicketForm, setShowNewTicketForm] = useState(false);\r\n\r\n  // Hooks\r\n  const { trackEvent, trackMetric } = usePerformance();\r\n  const socket = useSocket();\r\n\r\n  // Real-time updates\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('ticket_created', (data: any) => {\r\n        setTickets(prev => [data.ticket, ...prev]);\r\n        trackEvent('ticket_created_realtime');\r\n      });\r\n\r\n      socket.on('ticket_updated', (data: any) => {\r\n        setTickets(prev => prev.map(ticket => \r\n          ticket.id === data.ticket_id \r\n            ? { ...ticket, ...data.updates }\r\n            : ticket\r\n        ));\r\n        trackEvent('ticket_updated_realtime');\r\n      });\r\n\r\n      socket.on('ticket_escalated', (data: any) => {\r\n        setTickets(prev => prev.map(ticket => \r\n          ticket.id === data.ticket_id \r\n            ? { ...ticket, status: 'escalated', priority: data.new_priority }\r\n            : ticket\r\n        ));\r\n        trackEvent('ticket_escalated_realtime');\r\n      });\r\n\r\n      socket.on('support_metrics_update', (data: any) => {\r\n        setMetrics(data.metrics);\r\n      });\r\n\r\n      return () => {\r\n        socket.off('ticket_created');\r\n        socket.off('ticket_updated');\r\n        socket.off('ticket_escalated');\r\n        socket.off('support_metrics_update');\r\n      };\r\n    }\r\n  }, [socket, trackEvent]);\r\n\r\n  // Data fetching\r\n  const fetchSupportData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const [ticketsResponse, metricsResponse] = await Promise.all([\r\n        fetch('/api/customer-support/tickets'),\r\n        fetch('/api/customer-support/analytics')\r\n      ]);\r\n\r\n      if (ticketsResponse.ok) {\r\n        const ticketsData = await ticketsResponse.json();\r\n        setTickets(ticketsData.data.tickets);\r\n      }\r\n\r\n      if (metricsResponse.ok) {\r\n        const metricsData = await metricsResponse.json();\r\n        setMetrics(metricsData.data.ticket_analytics);\r\n      }\r\n\r\n      trackMetric('support_data_load_time', Date.now());\r\n    } catch (error) {\r\n      console.error('Error fetching support data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [trackMetric]);\r\n\r\n  useEffect(() => {\r\n    fetchSupportData();\r\n    const interval = setInterval(fetchSupportData, 30000); // Update every 30 seconds\r\n    return () => clearInterval(interval);\r\n  }, [fetchSupportData]);\r\n\r\n  // AI response generation\r\n  const generateAIResponse = async (ticketId: string) => {\r\n    try {\r\n      setAiGenerating(true);\r\n      setAiResponse('');\r\n\r\n      const response = await fetch('/api/customer-support/ai/generate-response', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          ticket_id: ticketId,\r\n          response_tone: aiOptions.tone,\r\n          max_length: aiOptions.maxLength,\r\n          context: {\r\n            include_order_info: aiOptions.includeOrderInfo,\r\n            personalize: aiOptions.personalizeResponse\r\n          }\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setAiResponse(data.data.ai_response);\r\n        trackEvent('ai_response_generated');\r\n      } else {\r\n        throw new Error('Failed to generate AI response');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error generating AI response:', error);\r\n    } finally {\r\n      setAiGenerating(false);\r\n    }\r\n  };\r\n\r\n  // Ticket management\r\n  const createTicket = async () => {\r\n    try {\r\n      const response = await fetch('/api/customer-support/tickets', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newTicket)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setTickets(prev => [data.data.ticket, ...prev]);\r\n        setNewTicket({\r\n          customer_email: '',\r\n          subject: '',\r\n          description: '',\r\n          priority: 'medium',\r\n          category: 'general'\r\n        });\r\n        setShowNewTicketForm(false);\r\n        trackEvent('ticket_created_manual');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating ticket:', error);\r\n    }\r\n  };\r\n\r\n  const updateTicket = async (ticketId: string, updates: Partial<SupportTicket>) => {\r\n    try {\r\n      const response = await fetch(`/api/customer-support/tickets/${ticketId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(updates)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setTickets(prev => prev.map(ticket => \r\n          ticket.id === ticketId ? data.data.ticket : ticket\r\n        ));\r\n        trackEvent('ticket_updated_manual');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating ticket:', error);\r\n    }\r\n  };\r\n\r\n  const escalateTicket = async (ticketId: string, reason: string) => {\r\n    try {\r\n      const response = await fetch(`/api/customer-support/escalate/${ticketId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ reason })\r\n      });\r\n\r\n      if (response.ok) {\r\n        trackEvent('ticket_escalated_manual');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error escalating ticket:', error);\r\n    }\r\n  };\r\n\r\n  // Filtering and search\r\n  const filteredTickets = useMemo(() => {\r\n    return tickets.filter(ticket => {\r\n      const matchesStatus = !filters.status || ticket.status === filters.status;\r\n      const matchesPriority = !filters.priority || ticket.priority === filters.priority;\r\n      const matchesCategory = !filters.category || ticket.category === filters.category;\r\n      const matchesSearch = !filters.search || \r\n        ticket.subject.toLowerCase().includes(filters.search.toLowerCase()) ||\r\n        ticket.customer_email.toLowerCase().includes(filters.search.toLowerCase()) ||\r\n        ticket.description.toLowerCase().includes(filters.search.toLowerCase());\r\n\r\n      return matchesStatus && matchesPriority && matchesCategory && matchesSearch;\r\n    });\r\n  }, [tickets, filters]);\r\n\r\n  // Priority and status styling\r\n  const getPriorityColor = (priority: string) => {\r\n    switch (priority) {\r\n      case 'critical':\r\n      case 'urgent':\r\n        return 'text-red-400 bg-red-500/20';\r\n      case 'high':\r\n        return 'text-orange-400 bg-orange-500/20';\r\n      case 'medium':\r\n        return 'text-yellow-400 bg-yellow-500/20';\r\n      case 'low':\r\n        return 'text-green-400 bg-green-500/20';\r\n      default:\r\n        return 'text-gray-400 bg-gray-500/20';\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'new':\r\n        return 'text-blue-400 bg-blue-500/20';\r\n      case 'open':\r\n        return 'text-cyan-400 bg-cyan-500/20';\r\n      case 'pending':\r\n        return 'text-yellow-400 bg-yellow-500/20';\r\n      case 'resolved':\r\n        return 'text-green-400 bg-green-500/20';\r\n      case 'closed':\r\n        return 'text-gray-400 bg-gray-500/20';\r\n      case 'escalated':\r\n        return 'text-red-400 bg-red-500/20';\r\n      default:\r\n        return 'text-gray-400 bg-gray-500/20';\r\n    }\r\n  };\r\n\r\n  const getSentimentColor = (score: number) => {\r\n    if (score >= 1) return 'text-green-400';\r\n    if (score >= 0) return 'text-yellow-400';\r\n    return 'text-red-400';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-96\">\r\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-accent-cyan\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      className=\"space-y-6 p-6 max-w-7xl mx-auto\"\r\n    >\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-text-primary flex items-center gap-2\">\r\n            <MessageCircle className=\"text-accent-cyan\" />\r\n            Customer Support Command Center\r\n          </h1>\r\n          <p className=\"text-text-dim\">AI-powered customer service automation and management</p>\r\n        </div>\r\n        <button\r\n          onClick={() => setShowNewTicketForm(true)}\r\n          className=\"px-4 py-2 bg-accent-cyan text-bg rounded-lg hover:bg-accent-cyan/80 transition-colors\"\r\n        >\r\n          Create Ticket\r\n        </button>\r\n      </div>\r\n\r\n      {/* Metrics Dashboard */}\r\n      <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-4\">\r\n        <motion.div \r\n          className=\"bg-surface rounded-xl p-4 border border-surface\"\r\n          whileHover={{ scale: 1.02 }}\r\n        >\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <MessageCircle className=\"w-5 h-5 text-accent-cyan\" />\r\n            <span className=\"text-sm text-text-dim\">Total Tickets</span>\r\n          </div>\r\n          <div className=\"text-2xl font-bold text-text-primary\">\r\n            {metrics.total_tickets.toLocaleString()}\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div \r\n          className=\"bg-surface rounded-xl p-4 border border-surface\"\r\n          whileHover={{ scale: 1.02 }}\r\n        >\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <Clock className=\"w-5 h-5 text-yellow-400\" />\r\n            <span className=\"text-sm text-text-dim\">Open</span>\r\n          </div>\r\n          <div className=\"text-2xl font-bold text-text-primary\">\r\n            {metrics.open_tickets.toLocaleString()}\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div \r\n          className=\"bg-surface rounded-xl p-4 border border-surface\"\r\n          whileHover={{ scale: 1.02 }}\r\n        >\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n            <span className=\"text-sm text-text-dim\">Resolved Today</span>\r\n          </div>\r\n          <div className=\"text-2xl font-bold text-text-primary\">\r\n            {metrics.resolved_today.toLocaleString()}\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div \r\n          className=\"bg-surface rounded-xl p-4 border border-surface\"\r\n          whileHover={{ scale: 1.02 }}\r\n        >\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <TrendingUp className=\"w-5 h-5 text-accent-magenta\" />\r\n            <span className=\"text-sm text-text-dim\">Avg Response</span>\r\n          </div>\r\n          <div className=\"text-2xl font-bold text-text-primary\">\r\n            {metrics.avg_response_time_hours.toFixed(1)}h\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div \r\n          className=\"bg-surface rounded-xl p-4 border border-surface\"\r\n          whileHover={{ scale: 1.02 }}\r\n        >\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <Star className=\"w-5 h-5 text-accent-green\" />\r\n            <span className=\"text-sm text-text-dim\">Satisfaction</span>\r\n          </div>\r\n          <div className=\"text-2xl font-bold text-text-primary\">\r\n            {(metrics.customer_satisfaction * 100).toFixed(0)}%\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div \r\n          className=\"bg-surface rounded-xl p-4 border border-surface\"\r\n          whileHover={{ scale: 1.02 }}\r\n        >\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <AlertTriangle className=\"w-5 h-5 text-red-400\" />\r\n            <span className=\"text-sm text-text-dim\">Escalation Rate</span>\r\n          </div>\r\n          <div className=\"text-2xl font-bold text-text-primary\">\r\n            {(metrics.escalation_rate * 100).toFixed(1)}%\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div \r\n          className=\"bg-surface rounded-xl p-4 border border-surface\"\r\n          whileHover={{ scale: 1.02 }}\r\n        >\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <Bot className=\"w-5 h-5 text-accent-cyan\" />\r\n            <span className=\"text-sm text-text-dim\">AI Responses</span>\r\n          </div>\r\n          <div className=\"text-2xl font-bold text-text-primary\">\r\n            {metrics.ai_responses_generated.toLocaleString()}\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div \r\n          className=\"bg-surface rounded-xl p-4 border border-surface\"\r\n          whileHover={{ scale: 1.02 }}\r\n        >\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <Users className=\"w-5 h-5 text-text-dim\" />\r\n            <span className=\"text-sm text-text-dim\">Sentiment</span>\r\n          </div>\r\n          <div className={`text-2xl font-bold ${getSentimentColor(metrics.sentiment_score)}`}>\r\n            {metrics.sentiment_score > 0 ? '+' : ''}{metrics.sentiment_score.toFixed(1)}\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Filters and Search */}\r\n      <div className=\"bg-surface rounded-xl p-4 border border-surface\">\r\n        <div className=\"flex flex-col sm:flex-row gap-4 items-start sm:items-center\">\r\n          <div className=\"flex items-center gap-2 text-text-primary\">\r\n            <Filter className=\"w-5 h-5\" />\r\n            <span>Filters:</span>\r\n          </div>\r\n          \r\n          <div className=\"flex flex-wrap gap-2 flex-1\">\r\n            <select\r\n              value={filters.status}\r\n              onChange={(e) => setFilters(prev => ({ ...prev, status: e.target.value }))}\r\n              className=\"px-3 py-1 bg-bg border border-surface rounded-lg text-text-primary text-sm\"\r\n            >\r\n              <option value=\"\">All Statuses</option>\r\n              <option value=\"new\">New</option>\r\n              <option value=\"open\">Open</option>\r\n              <option value=\"pending\">Pending</option>\r\n              <option value=\"resolved\">Resolved</option>\r\n              <option value=\"closed\">Closed</option>\r\n              <option value=\"escalated\">Escalated</option>\r\n            </select>\r\n\r\n            <select\r\n              value={filters.priority}\r\n              onChange={(e) => setFilters(prev => ({ ...prev, priority: e.target.value }))}\r\n              className=\"px-3 py-1 bg-bg border border-surface rounded-lg text-text-primary text-sm\"\r\n            >\r\n              <option value=\"\">All Priorities</option>\r\n              <option value=\"low\">Low</option>\r\n              <option value=\"medium\">Medium</option>\r\n              <option value=\"high\">High</option>\r\n              <option value=\"critical\">Critical</option>\r\n              <option value=\"urgent\">Urgent</option>\r\n            </select>\r\n\r\n            <select\r\n              value={filters.category}\r\n              onChange={(e) => setFilters(prev => ({ ...prev, category: e.target.value }))}\r\n              className=\"px-3 py-1 bg-bg border border-surface rounded-lg text-text-primary text-sm\"\r\n            >\r\n              <option value=\"\">All Categories</option>\r\n              <option value=\"billing\">Billing</option>\r\n              <option value=\"shipping\">Shipping</option>\r\n              <option value=\"product\">Product</option>\r\n              <option value=\"technical\">Technical</option>\r\n              <option value=\"refund\">Refund</option>\r\n              <option value=\"general\">General</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"relative\">\r\n            <Search className=\"w-5 h-5 absolute left-3 top-1/2 transform -translate-y-1/2 text-text-dim\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search tickets...\"\r\n              value={filters.search}\r\n              onChange={(e) => setFilters(prev => ({ ...prev, search: e.target.value }))}\r\n              className=\"pl-10 pr-4 py-2 bg-bg border border-surface rounded-lg text-text-primary placeholder-text-dim w-64\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tickets List and Details */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {/* Tickets List */}\r\n        <div className=\"lg:col-span-2 space-y-4\">\r\n          <h2 className=\"text-xl font-semibold text-text-primary\">\r\n            Support Tickets ({filteredTickets.length})\r\n          </h2>\r\n          \r\n          <div className=\"space-y-3 max-h-96 overflow-y-auto\">\r\n            <AnimatePresence>\r\n              {filteredTickets.map((ticket) => (\r\n                <motion.div\r\n                  key={ticket.id}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  exit={{ opacity: 0, y: -20 }}\r\n                  className={`bg-surface rounded-xl p-4 border cursor-pointer transition-all ${\r\n                    selectedTicket?.id === ticket.id \r\n                      ? 'border-accent-cyan shadow-lg shadow-accent-cyan/20' \r\n                      : 'border-surface hover:border-accent-cyan/50'\r\n                  }`}\r\n                  onClick={() => setSelectedTicket(ticket)}\r\n                  whileHover={{ scale: 1.01 }}\r\n                >\r\n                  <div className=\"flex justify-between items-start gap-4\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center gap-2 mb-2\">\r\n                        <span className=\"text-text-primary font-medium\">#{ticket.id}</span>\r\n                        <span className={`px-2 py-1 rounded-full text-xs ${getPriorityColor(ticket.priority)}`}>\r\n                          {ticket.priority}\r\n                        </span>\r\n                        <span className={`px-2 py-1 rounded-full text-xs ${getStatusColor(ticket.status)}`}>\r\n                          {ticket.status}\r\n                        </span>\r\n                      </div>\r\n                      \r\n                      <h3 className=\"text-text-primary font-medium mb-1 line-clamp-1\">\r\n                        {ticket.subject}\r\n                      </h3>\r\n                      \r\n                      <p className=\"text-text-dim text-sm mb-2 line-clamp-2\">\r\n                        {ticket.description}\r\n                      </p>\r\n                      \r\n                      <div className=\"flex items-center gap-4 text-xs text-text-dim\">\r\n                        <span className=\"flex items-center gap-1\">\r\n                          <Mail className=\"w-3 h-3\" />\r\n                          {ticket.customer_email}\r\n                        </span>\r\n                        <span className=\"flex items-center gap-1\">\r\n                          <Clock className=\"w-3 h-3\" />\r\n                          {new Date(ticket.created_at).toLocaleDateString()}\r\n                        </span>\r\n                        {ticket.sentiment_score !== 0 && (\r\n                          <span className={`flex items-center gap-1 ${getSentimentColor(ticket.sentiment_score)}`}>\r\n                            <Users className=\"w-3 h-3\" />\r\n                            {ticket.sentiment_score > 0 ? '+' : ''}{ticket.sentiment_score.toFixed(1)}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <button className=\"p-1 hover:bg-bg rounded transition-colors\">\r\n                      <MoreVertical className=\"w-4 h-4 text-text-dim\" />\r\n                    </button>\r\n                  </div>\r\n                </motion.div>\r\n              ))}\r\n            </AnimatePresence>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Ticket Details and AI Response */}\r\n        <div className=\"space-y-6\">\r\n          {selectedTicket ? (\r\n            <>\r\n              {/* Ticket Details */}\r\n              <div className=\"bg-surface rounded-xl p-4 border border-surface\">\r\n                <h3 className=\"text-lg font-semibold text-text-primary mb-4\">Ticket Details</h3>\r\n                \r\n                <div className=\"space-y-3\">\r\n                  <div>\r\n                    <label className=\"text-sm text-text-dim\">Subject</label>\r\n                    <p className=\"text-text-primary\">{selectedTicket.subject}</p>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <label className=\"text-sm text-text-dim\">Description</label>\r\n                    <p className=\"text-text-primary text-sm\">{selectedTicket.description}</p>\r\n                  </div>\r\n                  \r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <label className=\"text-sm text-text-dim\">Status</label>\r\n                      <select\r\n                        value={selectedTicket.status}\r\n                        onChange={(e) => updateTicket(selectedTicket.id, { status: e.target.value as any })}\r\n                        className=\"w-full px-2 py-1 bg-bg border border-surface rounded text-text-primary text-sm\"\r\n                      >\r\n                        <option value=\"new\">New</option>\r\n                        <option value=\"open\">Open</option>\r\n                        <option value=\"pending\">Pending</option>\r\n                        <option value=\"resolved\">Resolved</option>\r\n                        <option value=\"closed\">Closed</option>\r\n                      </select>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                      <label className=\"text-sm text-text-dim\">Priority</label>\r\n                      <select\r\n                        value={selectedTicket.priority}\r\n                        onChange={(e) => updateTicket(selectedTicket.id, { priority: e.target.value as any })}\r\n                        className=\"w-full px-2 py-1 bg-bg border border-surface rounded text-text-primary text-sm\"\r\n                      >\r\n                        <option value=\"low\">Low</option>\r\n                        <option value=\"medium\">Medium</option>\r\n                        <option value=\"high\">High</option>\r\n                        <option value=\"critical\">Critical</option>\r\n                        <option value=\"urgent\">Urgent</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex gap-2 pt-2\">\r\n                    <button\r\n                      onClick={() => escalateTicket(selectedTicket.id, 'Manual escalation')}\r\n                      className=\"px-3 py-1 bg-red-600 text-white rounded text-sm hover:bg-red-700 transition-colors\"\r\n                    >\r\n                      Escalate\r\n                    </button>\r\n                    <button\r\n                      onClick={() => generateAIResponse(selectedTicket.id)}\r\n                      disabled={aiGenerating}\r\n                      className=\"px-3 py-1 bg-accent-cyan text-bg rounded text-sm hover:bg-accent-cyan/80 transition-colors disabled:opacity-50\"\r\n                    >\r\n                      {aiGenerating ? 'Generating...' : 'AI Response'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* AI Response Generator */}\r\n              <div className=\"bg-surface rounded-xl p-4 border border-surface\">\r\n                <h3 className=\"text-lg font-semibold text-text-primary mb-4 flex items-center gap-2\">\r\n                  <Bot className=\"text-accent-cyan\" />\r\n                  AI Response Assistant\r\n                </h3>\r\n                \r\n                <div className=\"space-y-3\">\r\n                  <div>\r\n                    <label className=\"text-sm text-text-dim\">Response Tone</label>\r\n                    <select\r\n                      value={aiOptions.tone}\r\n                      onChange={(e) => setAiOptions(prev => ({ ...prev, tone: e.target.value as any }))}\r\n                      className=\"w-full px-2 py-1 bg-bg border border-surface rounded text-text-primary text-sm\"\r\n                    >\r\n                      <option value=\"professional\">Professional</option>\r\n                      <option value=\"friendly\">Friendly</option>\r\n                      <option value=\"empathetic\">Empathetic</option>\r\n                      <option value=\"formal\">Formal</option>\r\n                    </select>\r\n                  </div>\r\n                  \r\n                  {aiResponse && (\r\n                    <div>\r\n                      <label className=\"text-sm text-text-dim\">Generated Response</label>\r\n                      <div className=\"bg-bg border border-surface rounded p-3 text-text-primary text-sm\">\r\n                        {aiResponse}\r\n                      </div>\r\n                      <div className=\"flex gap-2 mt-2\">\r\n                        <button\r\n                          onClick={() => updateTicket(selectedTicket.id, { agent_response: aiResponse })}\r\n                          className=\"px-3 py-1 bg-accent-green text-bg rounded text-sm hover:bg-accent-green/80 transition-colors\"\r\n                        >\r\n                          Send Response\r\n                        </button>\r\n                        <button\r\n                          onClick={() => setAiResponse('')}\r\n                          className=\"px-3 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-700 transition-colors\"\r\n                        >\r\n                          Clear\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"bg-surface rounded-xl p-8 border border-surface text-center\">\r\n              <MessageCircle className=\"w-12 h-12 text-text-dim mx-auto mb-4\" />\r\n              <p className=\"text-text-dim\">Select a ticket to view details and generate AI responses</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* New Ticket Form Modal */}\r\n      <AnimatePresence>\r\n        {showNewTicketForm && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\"\r\n            onClick={() => setShowNewTicketForm(false)}\r\n          >\r\n            <motion.div\r\n              initial={{ scale: 0.9, opacity: 0 }}\r\n              animate={{ scale: 1, opacity: 1 }}\r\n              exit={{ scale: 0.9, opacity: 0 }}\r\n              className=\"bg-surface rounded-xl p-6 w-full max-w-lg border border-surface\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              <h2 className=\"text-xl font-semibold text-text-primary mb-4\">Create New Ticket</h2>\r\n              \r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm text-text-dim mb-1\">Customer Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    value={newTicket.customer_email}\r\n                    onChange={(e) => setNewTicket(prev => ({ ...prev, customer_email: e.target.value }))}\r\n                    className=\"w-full px-3 py-2 bg-bg border border-surface rounded text-text-primary\"\r\n                    placeholder=\"customer@example.com\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm text-text-dim mb-1\">Subject</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newTicket.subject}\r\n                    onChange={(e) => setNewTicket(prev => ({ ...prev, subject: e.target.value }))}\r\n                    className=\"w-full px-3 py-2 bg-bg border border-surface rounded text-text-primary\"\r\n                    placeholder=\"Brief description of the issue\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm text-text-dim mb-1\">Description</label>\r\n                  <textarea\r\n                    value={newTicket.description}\r\n                    onChange={(e) => setNewTicket(prev => ({ ...prev, description: e.target.value }))}\r\n                    className=\"w-full px-3 py-2 bg-bg border border-surface rounded text-text-primary h-24\"\r\n                    placeholder=\"Detailed description of the issue...\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm text-text-dim mb-1\">Priority</label>\r\n                    <select\r\n                      value={newTicket.priority}\r\n                      onChange={(e) => setNewTicket(prev => ({ ...prev, priority: e.target.value as any }))}\r\n                      className=\"w-full px-2 py-2 bg-bg border border-surface rounded text-text-primary\"\r\n                    >\r\n                      <option value=\"low\">Low</option>\r\n                      <option value=\"medium\">Medium</option>\r\n                      <option value=\"high\">High</option>\r\n                      <option value=\"critical\">Critical</option>\r\n                      <option value=\"urgent\">Urgent</option>\r\n                    </select>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <label className=\"block text-sm text-text-dim mb-1\">Category</label>\r\n                    <select\r\n                      value={newTicket.category}\r\n                      onChange={(e) => setNewTicket(prev => ({ ...prev, category: e.target.value }))}\r\n                      className=\"w-full px-2 py-2 bg-bg border border-surface rounded text-text-primary\"\r\n                    >\r\n                      <option value=\"general\">General</option>\r\n                      <option value=\"billing\">Billing</option>\r\n                      <option value=\"shipping\">Shipping</option>\r\n                      <option value=\"product\">Product</option>\r\n                      <option value=\"technical\">Technical</option>\r\n                      <option value=\"refund\">Refund</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex gap-3 mt-6\">\r\n                <button\r\n                  onClick={createTicket}\r\n                  className=\"flex-1 px-4 py-2 bg-accent-cyan text-bg rounded-lg hover:bg-accent-cyan/80 transition-colors\"\r\n                >\r\n                  Create Ticket\r\n                </button>\r\n                <button\r\n                  onClick={() => setShowNewTicketForm(false)}\r\n                  className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default CustomerSupportModule;"],"names":["Bot","createLucideIcon","EllipsisVertical","Filter","MessageCircle","useSocket","url","socket","setSocket","useState","isConnected","setIsConnected","connect","newSocket","io","error","disconnect","on","event","callback","off","useEffect","CustomerSupportModule","tickets","setTickets","metrics","setMetrics","selectedTicket","setSelectedTicket","filters","setFilters","loading","setLoading","aiGenerating","setAiGenerating","aiResponse","setAiResponse","aiOptions","setAiOptions","newTicket","setNewTicket","showNewTicketForm","setShowNewTicketForm","trackEvent","trackMetric","usePerformance","data","prev","ticket","fetchSupportData","useCallback","ticketsResponse","metricsResponse","ticketsData","metricsData","interval","generateAIResponse","ticketId","response","createTicket","updateTicket","updates","escalateTicket","reason","filteredTickets","useMemo","matchesStatus","matchesPriority","matchesCategory","matchesSearch","getPriorityColor","priority","getStatusColor","status","getSentimentColor","score","jsx","jsxs","motion","Clock","CheckCircle","TrendingUp","Star","AlertTriangle","Users","e","Search","AnimatePresence","Mail","MoreVertical","Fragment"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}