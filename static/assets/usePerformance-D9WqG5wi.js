import{r as t}from"./index-DGVu5RhP.js";function h(){const[o,n]=t.useState(null),[l,c]=t.useState(!0),[i,s]=t.useState(null),r=t.useCallback(async()=>{try{c(!0),s(null);const e=await fetch("/v1/metrics");if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const d=await e.json();n(d)}catch(e){const a=e instanceof Error?e.message:"Failed to fetch performance metrics";s(a),console.error("Performance metrics fetch error:",e)}finally{c(!1)}},[]),u=t.useCallback(async()=>{await r()},[r]);t.useEffect(()=>{r();const e=setInterval(r,3e4);return()=>clearInterval(e)},[r]);const f=t.useCallback(e=>{console.log(`Event tracked: ${e}`)},[]),k=t.useCallback((e,a)=>{console.log(`Metric tracked: ${e} = ${a}`)},[]),m=t.useCallback(e=>{console.log(`Interaction tracked: ${e}`)},[]);return{metrics:o,loading:l,error:i,refresh:u,trackEvent:f,trackMetric:k,trackInteraction:m}}export{h as u};
//# sourceMappingURL=usePerformance-D9WqG5wi.js.map
