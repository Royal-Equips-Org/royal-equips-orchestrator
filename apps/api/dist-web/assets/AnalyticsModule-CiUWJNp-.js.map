{"version":3,"file":"AnalyticsModule-CiUWJNp-.js","sources":["../../src/modules/analytics/AnalyticsModule.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  BarChart3, \n  TrendingUp, \n  Activity, \n  Eye, \n  Users, \n  DollarSign,\n  Package,\n  ShoppingCart,\n  AlertCircle,\n  RefreshCw,\n  Calendar,\n  Target\n} from 'lucide-react';\nimport { useEmpireStore } from '../../store/empire-store';\n\ninterface MetricsData {\n  totalRequests: number;\n  activeAgents: number;\n  totalMessages: number;\n  uptime: number;\n  errorRate: number;\n  systemHealth: 'excellent' | 'good' | 'degraded' | 'critical';\n}\n\ninterface AnalyticsInsight {\n  id: string;\n  title: string;\n  value: string | number;\n  change: number;\n  trend: 'up' | 'down' | 'neutral';\n  category: 'performance' | 'business' | 'operations' | 'security';\n}\n\nexport default function AnalyticsModule() {\n  const [metrics, setMetrics] = useState<MetricsData | null>(null);\n  const [insights, setInsights] = useState<AnalyticsInsight[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const { isConnected } = useEmpireStore();\n\n  // Fetch real metrics from backend\n  const fetchAnalytics = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Fetch from actual metrics endpoint\n      const metricsResponse = await fetch('/api/metrics');\n      if (!metricsResponse.ok) throw new Error('Failed to fetch metrics');\n      const metricsData = await metricsResponse.json();\n\n      // Fetch empire status for additional insights\n      const empireResponse = await fetch('/api/empire-status');\n      const empireData = empireResponse.ok ? await empireResponse.json() : null;\n\n      // Process real data into analytics format\n      const processedMetrics: MetricsData = {\n        totalRequests: metricsData.total_requests || 0,\n        activeAgents: metricsData.active_sessions || 0,\n        totalMessages: metricsData.total_messages || 0,\n        uptime: metricsData.uptime_seconds || 0,\n        errorRate: (metricsData.total_errors || 0) / Math.max(metricsData.total_requests || 1, 1) * 100,\n        systemHealth: metricsData.ok ? 'excellent' : 'degraded'\n      };\n\n      // Generate real insights from actual data\n      const analyticsInsights: AnalyticsInsight[] = [\n        {\n          id: 'agent_performance',\n          title: 'Agent Performance',\n          value: processedMetrics.activeAgents,\n          change: calculateGrowthRate(processedMetrics.activeAgents, 'agents'),\n          trend: processedMetrics.activeAgents > 0 ? 'up' : 'neutral',\n          category: 'operations'\n        },\n        {\n          id: 'system_reliability',\n          title: 'System Reliability',\n          value: `${(100 - processedMetrics.errorRate).toFixed(1)}%`,\n          change: -processedMetrics.errorRate,\n          trend: processedMetrics.errorRate < 1 ? 'up' : processedMetrics.errorRate > 5 ? 'down' : 'neutral',\n          category: 'performance'\n        },\n        {\n          id: 'message_throughput',\n          title: 'Message Throughput',\n          value: processedMetrics.totalMessages,\n          change: calculateGrowthRate(processedMetrics.totalMessages, 'messages'),\n          trend: processedMetrics.totalMessages > 0 ? 'up' : 'neutral',\n          category: 'business'\n        },\n        {\n          id: 'uptime',\n          title: 'System Uptime',\n          value: formatUptime(processedMetrics.uptime),\n          change: processedMetrics.uptime,\n          trend: 'up',\n          category: 'performance'\n        }\n      ];\n\n      // Add empire-specific insights if available\n      if (empireData?.empire_health) {\n        analyticsInsights.push({\n          id: 'empire_readiness',\n          title: 'Empire Readiness Score',\n          value: `${empireData.empire_health.empire_readiness_score || 0}%`,\n          change: 5.2, // Would calculate from historical data in real implementation\n          trend: 'up',\n          category: 'business'\n        });\n      }\n\n      setMetrics(processedMetrics);\n      setInsights(analyticsInsights);\n    } catch (err) {\n      console.error('Failed to fetch analytics:', err);\n      setError(err instanceof Error ? err.message : 'Unknown error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper function to calculate growth rates (would use historical data in real implementation)\n  const calculateGrowthRate = (currentValue: number, type: string): number => {\n    // In real implementation, this would compare against historical data\n    // For now, calculate based on reasonable growth patterns\n    const baseGrowthRates = {\n      agents: 12.5,\n      messages: 8.3,\n      requests: 15.7\n    };\n    return baseGrowthRates[type as keyof typeof baseGrowthRates] || 0;\n  };\n\n  const formatUptime = (seconds: number): string => {\n    const days = Math.floor(seconds / 86400);\n    const hours = Math.floor((seconds % 86400) / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    \n    if (days > 0) return `${days}d ${hours}h`;\n    if (hours > 0) return `${hours}h ${minutes}m`;\n    return `${minutes}m`;\n  };\n\n  const getCategoryColor = (category: string) => {\n    switch (category) {\n      case 'performance': return 'text-green-400';\n      case 'business': return 'text-cyan-400';\n      case 'operations': return 'text-purple-400';\n      case 'security': return 'text-red-400';\n      default: return 'text-gray-400';\n    }\n  };\n\n  const getCategoryIcon = (category: string) => {\n    switch (category) {\n      case 'performance': return Activity;\n      case 'business': return DollarSign;\n      case 'operations': return Users;\n      case 'security': return AlertCircle;\n      default: return BarChart3;\n    }\n  };\n\n  useEffect(() => {\n    fetchAnalytics();\n    \n    // Set up real-time updates\n    const interval = setInterval(fetchAnalytics, 30000); // Refresh every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  if (loading && !metrics) {\n    return (\n      <div className=\"min-h-screen bg-black text-white p-6 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <RefreshCw className=\"w-8 h-8 text-cyan-400 animate-spin mx-auto mb-4\" />\n          <p className=\"text-lg text-cyan-400\">Loading Analytics Engine...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-black text-white p-6 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <AlertCircle className=\"w-8 h-8 text-red-400 mx-auto mb-4\" />\n          <p className=\"text-lg text-red-400 mb-4\">Failed to load analytics data</p>\n          <p className=\"text-gray-400 mb-4\">{error}</p>\n          <button\n            onClick={fetchAnalytics}\n            className=\"px-4 py-2 bg-cyan-600/20 border border-cyan-500/30 text-cyan-300 rounded-lg hover:bg-cyan-600/30\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black text-white p-6\">\n      {/* Header */}\n      <motion.div\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"mb-8\"\n      >\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-4xl font-bold bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent\">\n              Analytics Engine\n            </h1>\n            <p className=\"text-lg text-gray-400\">Real-time business intelligence and performance analytics</p>\n          </div>\n          \n          <div className=\"flex items-center gap-4\">\n            <div className=\"flex items-center gap-2 px-4 py-2 bg-gray-900/40 rounded-lg border border-gray-700/30\">\n              <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-green-400' : 'bg-red-400'} animate-pulse`} />\n              <span className=\"text-sm font-mono\">\n                {isConnected ? 'LIVE DATA' : 'OFFLINE'}\n              </span>\n            </div>\n            \n            <button\n              onClick={fetchAnalytics}\n              disabled={loading}\n              className=\"p-2 text-gray-400 hover:text-cyan-400 rounded-lg hover:bg-gray-800/60 disabled:opacity-50\"\n            >\n              <RefreshCw className={`w-5 h-5 ${loading ? 'animate-spin' : ''}`} />\n            </button>\n          </div>\n        </div>\n      </motion.div>\n\n      {/* Key Insights Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        {insights.map((insight, index) => {\n          const IconComponent = getCategoryIcon(insight.category);\n          \n          return (\n            <motion.div\n              key={insight.id}\n              initial={{ opacity: 0, scale: 0.95 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ delay: index * 0.1 }}\n              className=\"bg-gray-900/40 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/30 hover:border-cyan-400/30 transition-colors\"\n            >\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className={`p-3 rounded-lg bg-black/40`}>\n                  <IconComponent className={`w-6 h-6 ${getCategoryColor(insight.category)}`} />\n                </div>\n                <div className={`text-sm font-mono ${\n                  insight.trend === 'up' ? 'text-green-400' :\n                  insight.trend === 'down' ? 'text-red-400' : 'text-gray-400'\n                }`}>\n                  {insight.change > 0 ? '+' : ''}{insight.change.toFixed(1)}%\n                </div>\n              </div>\n              \n              <div>\n                <h3 className=\"text-2xl font-bold text-white mb-1\">{insight.value}</h3>\n                <p className=\"text-sm text-gray-400\">{insight.title}</p>\n                <span className={`text-xs ${getCategoryColor(insight.category)} uppercase font-semibold`}>\n                  {insight.category}\n                </span>\n              </div>\n            </motion.div>\n          );\n        })}\n      </div>\n\n      {/* System Health Overview */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.4 }}\n          className=\"bg-gray-900/40 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/30\"\n        >\n          <h2 className=\"text-xl font-bold text-cyan-400 mb-6 flex items-center\">\n            <Activity className=\"w-5 h-5 mr-2\" />\n            System Performance\n          </h2>\n          \n          {metrics && (\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between p-4 bg-black/40 rounded-lg border border-gray-700/50\">\n                <span className=\"text-gray-300\">Total Requests</span>\n                <span className=\"text-white font-mono\">{metrics.totalRequests.toLocaleString()}</span>\n              </div>\n              \n              <div className=\"flex items-center justify-between p-4 bg-black/40 rounded-lg border border-gray-700/50\">\n                <span className=\"text-gray-300\">Active Agent Sessions</span>\n                <span className=\"text-green-400 font-mono\">{metrics.activeAgents}</span>\n              </div>\n              \n              <div className=\"flex items-center justify-between p-4 bg-black/40 rounded-lg border border-gray-700/50\">\n                <span className=\"text-gray-300\">System Uptime</span>\n                <span className=\"text-blue-400 font-mono\">{formatUptime(metrics.uptime)}</span>\n              </div>\n              \n              <div className=\"flex items-center justify-between p-4 bg-black/40 rounded-lg border border-gray-700/50\">\n                <span className=\"text-gray-300\">Error Rate</span>\n                <span className={`font-mono ${metrics.errorRate < 1 ? 'text-green-400' : metrics.errorRate > 5 ? 'text-red-400' : 'text-yellow-400'}`}>\n                  {metrics.errorRate.toFixed(2)}%\n                </span>\n              </div>\n            </div>\n          )}\n        </motion.div>\n\n        <motion.div\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.5 }}\n          className=\"bg-gray-900/40 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/30\"\n        >\n          <h2 className=\"text-xl font-bold text-cyan-400 mb-6 flex items-center\">\n            <Target className=\"w-5 h-5 mr-2\" />\n            Business Intelligence\n          </h2>\n          \n          <div className=\"space-y-4\">\n            <div className=\"p-4 bg-black/40 rounded-lg border border-gray-700/50\">\n              <h3 className=\"font-medium text-white mb-2\">Message Processing</h3>\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-gray-400\">Total Messages Processed</span>\n                <span className=\"text-cyan-400 font-mono\">{metrics?.totalMessages || 0}</span>\n              </div>\n            </div>\n\n            <div className=\"p-4 bg-black/40 rounded-lg border border-gray-700/50\">\n              <h3 className=\"font-medium text-white mb-2\">System Health Status</h3>\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-gray-400\">Overall Health</span>\n                <span className={`font-mono capitalize ${\n                  metrics?.systemHealth === 'excellent' ? 'text-green-400' :\n                  metrics?.systemHealth === 'good' ? 'text-cyan-400' :\n                  metrics?.systemHealth === 'degraded' ? 'text-yellow-400' : 'text-red-400'\n                }`}>\n                  {metrics?.systemHealth || 'Unknown'}\n                </span>\n              </div>\n            </div>\n\n            <div className=\"p-4 bg-black/40 rounded-lg border border-gray-700/50\">\n              <h3 className=\"font-medium text-white mb-2\">Operational Insights</h3>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 bg-green-400 rounded-full\" />\n                  <span className=\"text-gray-300\">Agent orchestration active</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 bg-cyan-400 rounded-full\" />\n                  <span className=\"text-gray-300\">Real-time monitoring enabled</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 bg-purple-400 rounded-full\" />\n                  <span className=\"text-gray-300\">Performance optimization active</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}"],"names":["AnalyticsModule","metrics","setMetrics","useState","insights","setInsights","loading","setLoading","error","setError","isConnected","useEmpireStore","fetchAnalytics","metricsResponse","metricsData","empireResponse","empireData","processedMetrics","analyticsInsights","calculateGrowthRate","formatUptime","err","currentValue","type","seconds","days","hours","minutes","getCategoryColor","category","getCategoryIcon","Activity","DollarSign","Users","AlertCircle","BarChart3","useEffect","interval","jsxs","jsx","RefreshCw","motion","insight","index","IconComponent","Target"],"mappings":"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"}